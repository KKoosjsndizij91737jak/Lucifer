for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        pcallBot = i
    end
end

onTile = {}
initialize = {}
onLeveling = {}
onFarmList = {}
indexPnb = {}
onBotBackup = {}
reversed = 1
pointData = block + 1
local customizable = {
    str = whitelist,
    variableSeeds = 0,
    variablePacks = 0,
    variableEvents = 0,
    indexPacks = 1,
    indexSeeds = 1,
    indexEvents = 1,
    indexBackups = 1,
    changeWorld = 1,
    formatTime = os.time(),
    seedsX = dropseedX - 1,
    seedsY = dropseedY - 1,
    packsX = droppackX - 1,
    packsY = droppackY - 1,
    eventsX = dropeventX - 1,
    eventsY = dropeventY - 1,
    positionX = customBreakX - 1,
    positionY = customBreakY - 1,
    jammerX = dropFireHouseX - 1,
    jammerY = dropFireHouseY - 1,
    away = {12,30,686,858,886,1040,1294,1684},
    notTrashItems = {18, 32, 6336, 9640, block,pointData,idblockleveling,idblockleveling+1}
}

if pcallBot then
    getBot().auto_reconnect = false
    getBot().auto_collect = false
    getBot().legit_mode = false
    getBot().move_range = moveRange
    getBot().move_interval = moveInterval
    for i = 1, worldPerbotPnb do
        table.insert(indexPnb,customWorldPnb[math.floor((pcallBot - 1) * worldPerbotPnb + i)])
    end
    for i = 1,worldperbot do
        table.insert(onLeveling,worldleveling[math.floor((pcallBot - 1) * worldperbot + i)])
    end
    for i =  1,farmperbot do
        table.insert(onFarmList,worldfarm[math.floor((pcallBot - 1) * farmperbot + i)])
    end
    for i =  1,botperswitch do
        table.insert(onBotBackup,botSwitch[math.floor((pcallBot - 1) * botperswitch + i)])
    end
    for idx, val in pairs(packList) do
        table.insert(customizable.notTrashItems,val)
    end
    if botRest then
        getBot().auto_rest_mode = true
        getBot().rest_time = botRestTime
        getBot().rest_interval = botRestInterval
        if disconnectOnRest then
            getBot().disconnect_on_rest = true
        end
    end
end

customizable.getBotWords = function()
    if sayingrandomwords then
        local random = {
            "Cuma senyuman doang, udah bikin gemes.",
            "Bentar lagi uda jarang ni lu nongkrong di sini.",
            "Kita ngapain sih, ikut-ikutan heboh?",
            "Gue tuh selalu berusaha baik, tapi gimana ya.",
            "Gak usah diambil pusing, santai aja dulu.",
            "Jangan sok asik, tuh keliatan banget.",
            "Santai aja dulu, gak usah tegang.",
            "Jangan bawa drama-dramaan, capek.",
            "Gak usah dibawa serius, nanti malah stress.",
            "Gue tuh kalem, gak usah ribut.",
            "Lagi asik nongkrong, ada yang ngomongin.",
            "Buat apa pake jaim-jaim, santai aja.",
            "Lagi asik handler game, tiba-tiba ada yang gangguin.",
            "Gak usah sok asik, keliatan banget.",
            "Nggak perlu pake baper, gak ada gunanya.",
            "Gue gak peduliin, tinggalin aja.",
            "Santai aja dulu, gak usah terlalu serius.",
            "Nggak usah diambil pusing, biar enak.",
            "Hati-hati, banyak orang munafik.",
            "Lagi pada heboh semua, bikin geger.",
            "Gak usah pake jaim-jaim, santai aja.",
            "Lagi dengerin lagu enak, bawaannya pengen joget.",
            "Nih, lagi pada rame-rame di tempat baru.",
            "Gue tuh kalem, gak perlu ribut.",
            "Udah capek-capek ngomong, gak dengerin juga.",
            "Asik banget nih, liburan seru.",
            "Gak usah sok asik, keliatan banget.",
            "Bentar lagi weekend, pasti seru banget nih.",
            "Cuma bisa doa aja, gimana lagi.",
            "Lagi asik handler, ada yang gangguin.",
            "Gue gak peduliin, tinggalin aja.",
            "Lagi mikirin, gak usah bener-bener serius.",
            "Jangan dibawa serius, nanti malah stress.",
            "Kondisi lagi kacau, gak karuan banget.",
            "Nih, jualan makanan enak banget di sini.",
        }
        local idx = math.random(1, #random)
        local words = random[idx]
        getBot():say(words)
        sleep(2000)
    end
end

customizable.guestId = function()
    local alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    local withnum = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    local generate = ""
    for i = 1,letter do
        local random = math.random(1,#alphabet)
        local randomnumber = math.random(1,#withnum)
        local acakalpa = string.sub(alphabet,random,random)
        local acaknomor = string.sub(withnum,randomnumber,randomnumber)
        if withnumber then
            generate = generate..acaknomor
        else
            generate = generate..acakalpa
        end
    end
    return generate
end

customizable.split = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

for i = math.floor(pnbtile/2),1,-1 do
    i = i * -1
    table.insert(onTile,i)
end
for i = 0, math.ceil(pnbtile/2) - 1 do
    table.insert(onTile,i)
end

punch = function(ex,ye)
    getBot():hit(getBot().x+ex,getBot().y+ye)
end

place = function(ex,ye,id)
    getBot():place(getBot().x+ex,getBot().y+ye,id)
end

customizable.punchitem = function(x,y)
    for _,num in pairs(onTile) do
        if getTile(x+1,y + num).fg ~= 0 or getTile(x+1,y + num).bg ~= 0 then
            return true
        end
    end
    return false
end

customizable.placeitem = function(x,y)
    for _,num in pairs(onTile) do
        if getTile(x+1,y + num).fg == 0 and getTile(x+1,y + num).bg == 0 then
            return true
        end
    end
    return false
end

customizable.itemFloat = function(id)
    return getBot():getWorld().growscan:getObjects()[id] or 0
end

customizable.writeFile = function(info,text)
    local file = io.open(""..info..".txt","a")
    file:write(text.."\n")
    file:close()
end

customizable.initStatus = function()
    str = ""
    if not shortWebhookText then
        for idx, val in pairs(getBots()) do
            if val.status == BotStatus.online then
                enet = "ONLINE"
            elseif val.status == BotStatus.account_banned  then
                enet = "SUSPENDED"
            elseif val.status == BotStatus.error_connecting  then
                enet = "ERCON"
            else
                enet = "DISCONNECT"
            end
            str = str.."\n"..enet.."" 
        end
        return str
    else
        for idx, val in pairs(getBots()) do
            if val.status == BotStatus.online then
                enet = "ON"
            elseif val.status == BotStatus.account_banned  then
                enet = "SUS"
            elseif val.status == BotStatus.error_connecting  then
                enet = "ERCON"
            else
                enet = "OFF"
            end
            str = str.."\n"..enet.."" 
        end
        return str
    end
end

customizable.initBot = function()
    str = ""
    if not shortWebhookText then
        if not hiddenWebhook then
            for _, bot in pairs(getBots()) do
                str = str.."\n["..bot.level.."]"..string.upper(bot.name).."" 
            end
            return str
        else
            for _, bot in pairs(getBots()) do
                str = str.."\n["..bot.level.."]||"..string.upper(bot.name).."||" 
            end
            return str
        end
    else
        if not hiddenWebhook then
            for _, bot in pairs(getBots()) do
                str = str.."\n["..bot.level.."]"..string.sub(bot.name,1,3).."" 
            end
            return str
        else
            for _, bot in pairs(getBots()) do
                str = str.."\n["..bot.level.."]||"..string.sub(bot.name,1,3).."||" 
            end
            return str
        end
    end
end

customizable.initWorld = function()
    str = ""
    if not shortWebhookText then
        if not hiddenWebhook then
            for _, bots in pairs(getBots()) do
                str = str.."\n"..string.upper(bots:getWorld().name).."" 
            end
            return str
        else
            for _, bots in pairs(getBots()) do
                str = str.."\n||"..string.upper(bots:getWorld().name).."||" 
            end
            return str
        end
    else
        if not hiddenWebhook then
            for _, bots in pairs(getBots()) do
                str = str.."\n"..string.sub(bots:getWorld().name,1,3).."" 
            end
            return str
        else
            for _, bots in pairs(getBots()) do
                str = str.."\n||"..string.sub(bots:getWorld().name,1,3).."||" 
            end
            return str
        end
    end
end

customizable.initOnSeed = function()
    str = ""
    if not shortWebhookText then
        if not hiddenWebhook then
            for i = 1, #worldseed do
                str = str.."\n"..string.upper(worldseed[i]).." : "..(initialize[worldseed[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldseed do
                str = str.."\n||"..string.upper(worldseed[i]).."|| : "..(initialize[worldseed[i]] or "?")..""
            end
            return str
        end
    else
        if not hiddenWebhook then
            for i = 1, #worldseed do
                str = str.."\n"..string.sub(worldseed[i],1,3).." : "..(initialize[worldseed[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldseed do
                str = str.."\n||"..string.sub(worldseed[i],1,3).."|| : "..(initialize[worldseed[i]] or "?")..""
            end
            return str
        end
    end
end

customizable.initOnPack = function()
    str = ""
    if not shortWebhookText then
        if not hiddenWebhook then
            for i = 1, #worldpack do
                str = str.."\n"..string.upper(worldpack[i]).." : "..(initialize[worldpack[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldpack do
                str = str.."\n||"..string.upper(worldpack[i]).."|| : "..(initialize[worldpack[i]] or "?")..""
            end
            return str
        end
    else
        if not hiddenWebhook then
            for i = 1, #worldpack do
                str = str.."\n"..string.sub(worldpack[i],1,3).." : "..(initialize[worldpack[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldpack do
                str = str.."\n||"..string.sub(worldpack[i],1,3).."|| : "..(initialize[worldpack[i]] or "?")..""
            end
            return str
        end
    end
end

customizable.initOnEvent = function()
    str = ""
    if not shortWebhookText then
        if not hiddenWebhook then
            for i = 1, #worldevent do
                str = str.."\n"..string.upper(worldevent[i]).." : "..(initialize[worldevent[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldevent do
                str = str.."\n||"..string.upper(worldevent[i]).."|| : "..(initialize[worldevent[i]] or "?")..""
            end
            return str
        end
    else
        if not hiddenWebhook then
            for i = 1, #worldevent do
                str = str.."\n"..string.sub(worldevent[i],1,3).." : "..(initialize[worldevent[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldevent do
                str = str.."\n||"..string.sub(worldevent[i],1,3).."|| : "..(initialize[worldevent[i]] or "?")..""
            end
            return str
        end
    end
end

customizable.getAllGems = function()
    local count = 0
    for _,bot in pairs(getBots()) do
        count = count + bot.gem_count
    end
    return count
end

customizable.botStatics = function(content)
	if webhookstatus then
		text = [[
			$webHookUrl = "]]..webhookstatuslink..[["
			$payload = @{
				content = "]]..content..[["
			}

			[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
			Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
		]]
		local file = io.popen("powershell -command -", "w")
		file:write(text)
		file:close()
	end
end

customizable.farmInfo = function(content)
    if webhookestimate then
        text = [[
            $webHookUrl = "]]..linkEstimate..[["
            $payload = @{
                embeds = @(
                    @{
                        fields = @(
                            @{
                                name = "FARM ESTIMATE"
                                value = "]]..content..[["
                                inline = "false"
                            }
                        )
                    }
                )
            }
    
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
        ]]
        local file = io.popen("powershell -command -", "w")
        file:write(text)
        file:close()
    end
end

customizable.initializeBots = function()
	if botinfo then
        realtime = os.time() - customizable.formatTime
        local text = [[
            $webHookUrl = "]]..linkbotinfo..[[/messages/]]..messageidbotinfo..[["
            $payload = @{
                username = "Debra's"
                embeds = @(
                    @{
                        title = "Caramoy Syndicate : https://discord.com/invite/fTTKW8vvuq"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]].."RUNTIME : "..math.floor(realtime/86400).." Days "..math.floor(realtime%86400/3600).." Hours "..math.floor(realtime%86400%3600/60).." Minutes"..[["
                                inline = "false"
                            }
                            @{
                                name = ""
                                value = "]].."TOTAL GEMS : "..customizable.getAllGems()..[["
                                inline = "false"
                            }
                            @{
                                name = "BOTNAME"
                                value = "]]..customizable.initBot()..[["
                                inline = "true"
                            }
                            @{
                                name = "WORLD"
                                value = "]]..customizable.initWorld()..[["
                                inline = "true"
                            }
                            @{
                                name = "STATUS"
                                value = "]]..customizable.initStatus()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Lucifer] : Rotation Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

customizable.initializeOnStorage = function()
	if infostorage then
        local text = [[
            $webHookUrl = "]]..linkinfostorage..[[/messages/]]..messageidstorage..[["
            $payload = @{
                username = "Caramoy's"
                embeds = @(
                    @{
                        title = "Caramoy Syndicate : https://discord.com/invite/fTTKW8vvuq"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = "STORAGE SEED"
                                value = "]]..customizable.initOnSeed()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE PACK"
                                value = "]]..customizable.initOnPack()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE EVENT"
                                value = "]]..customizable.initOnEvent()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Lucifer] : Rotation Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

customizable.reconnect = function(init,id,x,y)
    if getBot():getPing() == 0 then
        getBot():disconnect()
        sleep(4000)
    end
    if not getBot():isInWorld(init:upper()) and getBot().status == BotStatus.online then 
        customizable.botStatics("("..getBot().name..") at another world, trying to joining world again @everyone")
        local count = 0
        while not getBot():isInWorld(init:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..init:upper().."\ninvitedWorld|0")
            sleep(delaywarp)
            if not getBot():isInWorld(init:upper()) then 
                count = count + 1
                if count > 5 then
                    customizable.botStatics("("..getBot().name..") Failed to joining world again, terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if id ~= "" then
            local stucks = 0
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..init:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
                if stucks > 3 then
                    customizable.botStatics("("..getBot().name..") Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                getBot():findPath(x,y)
                sleep(150)
            end
        end
        customizable.botStatics("("..getBot().name..") success to joining world @everyone")
    end
    if getBot().status ~= BotStatus.online then
        customizable.botStatics("("..getBot().name..") status is offline @everyone")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                if switchOnSuspend then
                    if customizable.typeaccount == "normal" then
                        customizable.writeFile("SuspendList",getBot().name)
                    elseif customizable.typeaccount == "guest" then
                        customizable.writeFile("SuspendList",getBot():getLogin().mac .. "|" .. getBot():getLogin().rid)
                    end
                    customizable.onBackup()
                else
                    customizable.botStatics("("..getBot().name..") status is suspended, removing bot @everyone")
                    getBot():stopScript()
                end
            end
        end
        local counts = 0
        while not getBot():isInWorld(init:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..init:upper().."\ninvitedWorld|0")
            sleep(delaywarp)
            if not getBot():isInWorld(init:upper()) then 
                counts = counts + 1
                if counts > 5 then
                    customizable.botStatics("("..getBot().name..") Failed to joining world again, terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if id ~= "" then
            local stuckk = 0
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..init:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
                if stuckk > 3 then
                    customizable.botStatics("("..getBot().name..") Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                getBot():findPath(x,y)
                sleep(150)
            end
        end
        customizable.botStatics("("..getBot().name..") status is online @everyone")
    end
end

customizable.buying = function()
    print("["..pcallBot.."]Buying packs")
    if upbackpack then
        print("["..pcallBot.."]Up Backpack")
        while getBot():getInventory().slotcount < 36 do
            getBot():sendPacket(2,"action|buy\nitem|upgrade_backpack")
            sleep(1000)
        end
    end
    while getBot().gem_count >= pricepack do
        getBot():sendPacket(2,"action|buy\nitem|"..debug)
        sleep(1000)
        if getBot():getInventory():getItemCount(packList[1]) >= 200 then
            break
        end
    end
end

customizable.warp = function(init,id,cooldown)
    name = init
    if id ~= "" then
        name = name .. "|" ..id
    end
    if not getBot():isInWorld(init:upper()) then
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == "OnConsoleMessage" then
                if variant:get(1):getString():lower():find("inaccessible.") then
                    nuked = true
                end
            end
        end)
        while not getBot():isInWorld(init:upper()) and not nuked do
            if getBot():getPing() == 0 then
                getBot():disconnect()
                sleep(2000)
            end
            if getBot().status ~= BotStatus.online then
                customizable.botStatics("("..getBot().name..") status is offline @everyone")
                while getBot().status ~= BotStatus.online do
                    getBot():connect()
                    sleep(delayreconnect)
                    if getBot().status == BotStatus.account_banned then
                        if switchOnSuspend then
                            if customizable.typeaccount == "normal" then
                                customizable.writeFile("SuspendList",getBot().name)
                            elseif customizable.typeaccount == "guest" then
                                customizable.writeFile("SuspendList",getBot():getLogin().mac .. "|" .. getBot():getLogin().rid)
                            end
                            customizable.onBackup()
                        else
                            customizable.botStatics("("..getBot().name..") status is suspended, removing bot @everyone")
                            getBot():stopScript()
                        end
                    end
                end
                customizable.botStatics("("..getBot().name..") status is online @everyone")
            end
            getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
            listenEvents(8)
            sleep(cooldown)
        end
        removeEvents()
        sleep(2000)
    end
    if getBot():isInWorld(init:upper()) then
        if id ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 and not wrong do
                if getBot():getPing() == 0 then
                    getBot():disconnect()
                    sleep(4000)
                end
                if getBot().status ~= BotStatus.online then
                    customizable.botStatics("("..getBot().name..") status is offline @everyone")
                    while getBot().status ~= BotStatus.online do
                        getBot():connect()
                        sleep(delayreconnect)
                        if getBot().status == BotStatus.account_banned then
                            if switchOnSuspend then
                                if customizable.typeaccount == "normal" then
                                    customizable.writeFile("SuspendList",getBot().name)
                                elseif customizable.typeaccount == "guest" then
                                    customizable.writeFile("SuspendList",getBot():getLogin().mac .. "|" .. getBot():getLogin().rid)
                                end
                                customizable.onBackup()
                            else
                                customizable.botStatics("("..getBot().name..") status is suspended, removing bot @everyone")
                                getBot():stopScript()
                            end
                        end
                    end
                    customizable.botStatics("("..getBot().name..") status is online @everyone")
                end
                getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
                sleep(cooldown)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

customizable.worldRandom = function()
    print("["..pcallBot.."]Clearing history")
    for _, idx in pairs(worldclearhistory) do
        customizable.warp(idx,"",delaywarp)
        if not nuked then
            customizable.reconnect(idx,"")
        else
            nuked = false
            print("["..pcallBot.."]World clearing history has nuked or higher level!!, change ur world history list")
            customizable.botStatics("World clearing history has nuked or higher level!!, change ur world history list. SC Terminated @everyone")
            getBot():stopScript()
        end
    end
end

customizable.takeFirehouse = function()
    world = customizable.split(worldFireHouse[reversed],"[^|]+")[1]
    door = customizable.split(worldFireHouse[reversed],"[^|]+")[2]
    customizable.warp(world,door,delaywarp)
    if not nuked then
        if not wrong then
            for _, obj in pairs(getBot():getWorld():getObjects()) do
                if obj.id == 3066 then
                    getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                    sleep(100)
                    getBot():collect(2)
                    sleep(1000)
                    customizable.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                end
                if getBot():getInventory():getItemCount(3066) > 0  then
                    break
                end
            end
            if getBot():getInventory():getItemCount(3066) > 0  then
                getBot():moveTo(1,0)
                sleep(100)
                getBot():setDirection(true)
                getBot():wear(3066)
                sleep(1000)
                getBot():drop(3066,getBot():getInventory():getItemCount(3066) - 1)
                sleep(1000)
            end
        else
            wrong = false
            print("["..pcallBot.."]Id door world Fire house is wrong, check ur id door !!")
            customizable.botStatics("Id door world Fire house is wrong, check ur id door !, terminated script @everyone")
            getBot():stopScript()
        end
    else
        nuked = false
        print("["..pcallBot.."]World Fire house is nuked, check ur world !!")
        customizable.botStatics("World Fire house is nuked, check ur world !, terminated script @everyone")
        getBot():stopScript()
    end
end

customizable.wearingPick = function()
    world = customizable.split(worldpickaxe[reversed],"[^|]+")[1]
    door = customizable.split(worldpickaxe[reversed],"[^|]+")[2]
    customizable.warp(world,door,delaywarp)
    if not nuked then
        if not wrong then
            for _, obj in pairs(getBot():getWorld():getObjects()) do
                if obj.id == 98 then
                    getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                    sleep(100)
                    getBot():collect(2)
                    sleep(1000)
                    customizable.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                end
                if getBot():getInventory():getItemCount(98) > 0  then
                    break
                end
            end
            if getBot():getInventory():getItemCount(98) > 0  then
                getBot():moveTo(1,0)
                sleep(100)
                getBot():setDirection(true)
                getBot():wear(98)
                sleep(1000)
                getBot():drop(98,getBot():getInventory():getItemCount(98) - 1)
                sleep(1000)
            end
        else
            wrong = false
            print("["..pcallBot.."]Id door world pickaxe is wrong, check ur id door !!")
            customizable.botStatics("Id door world pickaxe is wrong, check ur id door !, terminated script @everyone")
            getBot():stopScript()
        end
    else
        nuked = false
        print("["..pcallBot.."]Worldpickaxe is nuked, check ur world !!")
        customizable.botStatics("World pickaxe is nuked, check ur world !, terminated script @everyone")
        getBot():stopScript()
    end
end

customizable.wearingItemSup = function()
    print("["..pcallBot.."]Take support items")
    world = customizable.split(worlditemtowear[reversed],"[^|]+")[1]
    door = customizable.split(worlditemtowear[reversed],"[^|]+")[2]
    customizable.warp(world,door,delaywarp)
    if not nuked then
        if not wrong then
            if getBot():getInventory():getItemCount(iditemtowear) == 0 and customizable.itemFloat(iditemtowear) >= itemkeep then
                for _, obj in pairs(getBot():getWorld():getObjects()) do
                    if obj.id == iditemtowear then
                        getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                        sleep(100)
                        getBot():collect(2)
                        sleep(1000)
                        getBot():setDirection(false)
                    end
                    if getBot():getInventory():getItemCount(iditemtowear) > 0  then
                        break
                    end
                end
                if getBot():getInventory():getItemCount(iditemtowear) > 0  then
                    getBot():wear(iditemtowear)
                    sleep(500)
                    getBot():setDirection(true)
                    getBot():drop(iditemtowear,getBot():getInventory():getItemCount(iditemtowear) - itemkeep)
                    sleep(500)
                    print("["..pcallBot.."]("..getBot().name..") Success take and wear the support items!")
                    customizable.botStatics("("..getBot().name..") Success take and wear the support items!")
                end
            else
                print("["..pcallBot.."]Support item is empty, Drop the support item right now!")
                customizable.botStatics("Support item is empty, Drop the support item right now! @everyone")
            end
        else
            wrong = false
            print("["..pcallBot.."]Id door world take support items is wrong, check ur id door!")
            customizable.botStatics("Id door world take support items is wrong, check ur id door! @everyone")
            getBot():stopScript()
        end
    else
        nuked = false
        print("["..pcallBot.."]World take support items is nuked, check ur world!")
        customizable.botStatics("World take support items is nuked, check ur world! @everyone")
        getBot():stopScript()
    end
end

customizable.onEvent = function(threads)
    print("["..pcallBot.."]Dropping events")
    for i = customizable.indexEvents , #worldevent do
        world = worldevent[i]
        customizable.warp(world,doorworldevent,delaywarp)
        if not nuked then
            if not wrong then
                if customizable.itemFloat(eventList[1]) >= limitevent then
                    initialize[world] = ""..customizable.itemFloat(eventList[1]).."x (LIMIT)"
                    customizable.botStatics("Events storage : ("..world..") has reached limit, skipped world @everyone")
                    print("["..pcallBot.."]Events storage : ("..world..") has reached limit, skipped world")
                    customizable.indexEvents = customizable.indexEvents + 1
                    if customizable.indexEvents > #worldevent then
                        initialize[world] = ""..customizable.itemFloat(eventList[1]).."x (LIMIT)"
                        customizable.botStatics("All events storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        print("["..pcallBot.."]All events storage has reached limit, Removing bot : ("..getBot().name..")")
                        customizable.initializeBots()
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    customizable.variableEvents = 0
                else
                    for y,pack in pairs(eventList) do
                        for i,tile in pairs(getBot():getWorld():getTiles()) do
                            if separated then
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    getBot():findPath(customizable.eventsX + (customizable.variableEvents),customizable.eventsY - (y - 1))
                                    sleep(100)
                                    local count = 0
                                    customizable.reconnect(world,doorworldevent,customizable.eventsX + (customizable.variableEvents),customizable.eventsY - (y - 1))
                                    if customizable.eventsX + (customizable.variableEvents) >= 98 then
                                        customizable.eventsY = customizable.eventsY - 1
                                        customizable.variableEvents = 0
                                    end
                                    getBot():setDirection(false)
                                    while getBot():getInventory():getItemCount(pack) > 0 do
                                        getBot():drop(pack,200)
                                        sleep(delaydrop)
                                        customizable.reconnect(world,doorworldevent,customizable.eventsX + (customizable.variableEvents),customizable.eventsY - (y - 1))
                                        count = count + 1
                                        if count >= 2 then
                                            customizable.variableEvents = customizable.variableEvents + 1
                                            goto BACK
                                        end
                                    end
                                end
                                if getBot():getInventory():getItemCount(pack) == 0 then
                                    break
                                end
                            else
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    getBot():findPath(customizable.eventsX + (customizable.variableEvents),customizable.eventsY)
                                    sleep(100)
                                    local count = 0
                                    customizable.reconnect(world,doorworldevent,customizable.eventsX + (customizable.variableEvents),customizable.eventsY)
                                    if customizable.eventsX + (customizable.variableEvents) >= 98 then
                                        customizable.eventsY = customizable.eventsY - 1
                                        customizable.variableEvents = 0
                                    end
                                    getBot():setDirection(false)
                                    while getBot():getInventory():getItemCount(pack) > 0 do
                                        getBot():drop(pack,200)
                                        sleep(delaydrop)
                                        customizable.reconnect(world,doorworldevent,customizable.eventsX + (customizable.variableEvents),customizable.eventsY)
                                        count = count + 1
                                        if count >= 2 then
                                            customizable.variableEvents = customizable.variableEvents + 1
                                            goto BACK
                                        end
                                    end
                                end
                                if getBot():getInventory():getItemCount(pack) == 0 then
                                    break
                                end
                            end
                        end
                    end
                    sleep(100)
                    break
                end
            else
                initialize[world] = "WRONG DOOR"
                wrong = false
                print("["..pcallBot.."]("..world..") Id door events storage is wrong, check ur id door!")
                customizable.botStatics("("..world..") Id door events storage is wrong, check ur id door! @everyone")
                customizable.indexEvents = customizable.indexEvents + 1
                if customizable.indexEvents > #worldevent then
                    print("["..pcallBot.."]All events storage has reached limit")
                    customizable.botStatics("All events storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                customizable.variableEvents = 0
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            print("["..pcallBot.."]("..world..") event Storage is NUKED, check ur storage!")
            customizable.botStatics("("..world..") event Storage is NUKED, check ur storage! @everyone")
            customizable.indexEvents = customizable.indexEvents + 1
            if customizable.indexEvents > #worldevent then
                print("["..pcallBot.."]All events storage has reached limit!")
                customizable.botStatics("All events storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            customizable.variableEvents = 0
        end
    end
    initialize[world] = ""..customizable.itemFloat(eventList[1]).."x"
    customizable.initializeOnStorage()
    if clearhistory then
        customizable.worldRandom()
    end
end

customizable.onPack = function()
    print("["..pcallBot.."]Dropping packs")
    for i = customizable.indexPacks , #worldpack do
        world = worldpack[i]
        customizable.warp(world,doorworldpack,delaywarp)
        if not nuked then
            if not wrong then
                if customizable.itemFloat(packList[1]) >= limitpack then
                    initialize[world] = ""..customizable.itemFloat(packList[1]).."x (LIMIT)"
                    customizable.botStatics("Packs storage : ("..world..") has reached limit, skipped world @everyone")
                    print("["..pcallBot.."]Packs storage : ("..world..") has reached limit, skipped world")
                    customizable.indexPacks = customizable.indexPacks + 1
                    if customizable.indexPacks > #worldpack then
                        initialize[world] = ""..customizable.itemFloat(packList[1]).."x (LIMIT)"
                        customizable.botStatics("All packs storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        print("["..pcallBot.."]All packs storage has reached limit, Removing bot : ("..getBot().name..")")
                        customizable.initializeBots()
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    customizable.variablePacks = 0
                else
                    for y,pack in pairs(packList) do
                        for i,tile in pairs(getBot():getWorld():getTiles()) do
                            if separated then
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    getBot():findPath(customizable.packsX + (customizable.variablePacks),customizable.packsY - (y-1))
                                    sleep(100)
                                    local count = 0
                                    customizable.reconnect(world,doorworldpack,customizable.packsX + (customizable.variablePacks),customizable.packsY - (y-1))
                                    if customizable.packsX + (customizable.variablePacks) >= 98 then
                                        customizable.packsY = customizable.packsY - 1
                                        customizable.variablePacks = 0
                                    end
                                    getBot():setDirection(false)
                                    while getBot():getInventory():getItemCount(pack) > 0 do
                                        getBot():drop(pack,200)
                                        sleep(delaydrop)
                                        customizable.reconnect(world,doorworldpack,customizable.packsX + (customizable.variablePacks),customizable.packsY - (y-1))
                                        count = count + 1
                                        if count >= 2 then
                                            customizable.variablePacks = customizable.variablePacks + 1
                                            goto BACK
                                        end
                                    end
                                end
                                if getBot():getInventory():getItemCount(pack) == 0 then
                                    break
                                end
                            else
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    getBot():findPath(customizable.packsX + (customizable.variablePacks),customizable.packsY)
                                    sleep(100)
                                    local count = 0
                                    customizable.reconnect(world,doorworldpack,customizable.packsX + (customizable.variablePacks),customizable.packsY)
                                    if customizable.packsX + (customizable.variablePacks) >= 98 then
                                        customizable.packsY = customizable.packsY - 1
                                        customizable.variablePacks = 0
                                    end
                                    getBot():setDirection(false)
                                    while getBot():getInventory():getItemCount(pack) > 0 do
                                        getBot():drop(pack,200)
                                        sleep(delaydrop)
                                        customizable.reconnect(world,doorworldpack,customizable.packsX + (customizable.variablePacks),customizable.packsY)
                                        count = count + 1
                                        if count >= 2 then
                                            customizable.variablePacks = customizable.variablePacks + 1
                                            goto BACK
                                        end
                                    end
                                end
                                if getBot():getInventory():getItemCount(pack) == 0 then
                                    break
                                end
                            end
                        end
                    end
                    sleep(100)
                    break
                end
            else
                initialize[world] = "WRONG DOOR"
                wrong = false
                print("["..pcallBot.."]("..world..") Id door packs storage is wrong, check ur id door!")
                customizable.botStatics("("..world..") Id door packs storage is wrong, check ur id door! @everyone")
                customizable.indexPacks = customizable.indexPacks + 1
                if customizable.indexPacks > #worldpack then
                    print("["..pcallBot.."]All packs storage has reached limit")
                    customizable.botStatics("All packs storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                customizable.variablePacks = 0
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            print("["..pcallBot.."]("..world..") packs Storage is NUKED, check ur storage!")
            customizable.botStatics("("..world..") packs Storage is NUKED, check ur storage! @everyone")
            customizable.indexPacks = customizable.indexPacks + 1
            if customizable.indexPacks > #worldpack then
                print("["..pcallBot.."]All packs storage has reached limit!")
                customizable.botStatics("All packs storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            customizable.variablePacks = 0
        end
    end
    initialize[world] = ""..customizable.itemFloat(packList[1]).."x"
    customizable.initializeOnStorage()
    if clearhistory then
        customizable.worldRandom()
    end
end

customizable.scanBlock = function(id)
    local count = 0
    for _, tile in pairs(getBot():getWorld():getTiles()) do
        if tile.fg == id or tile.bg == id then
            count = count + 1
        end
    end
    return count
end

customizable.onSeed = function(info,seedid)
    print("["..pcallBot.."]Dropping seeds")
    for i = customizable.indexSeeds , #worldseed do
        world = worldseed[i]
        customizable.warp(world,doorworldseed,delaywarp)
        if not nuked then
            if not wrong then
                if customizable.itemFloat(pointData) >= limitseed then
                    initialize[world] = ""..customizable.itemFloat(pointData).."x (LIMIT)"
                    customizable.botStatics("Seeds storage : ("..world..") has reached limit, skipped world @everyone")
                    print("["..pcallBot.."]Seeds storage : ("..world..") has reached limit, skipped world")
                    customizable.indexSeeds = customizable.indexSeeds + 1
                    if customizable.indexSeeds > #worldseed then
                        initialize[world] = ""..customizable.itemFloat(pointData).."x (LIMIT)"
                        customizable.botStatics("All seeds storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        print("["..pcallBot.."]All seeds storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        customizable.initializeBots()
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    customizable.variableSeeds = 0
                else
                    for i,tile in pairs(getBot():getWorld():getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::BACK::
                            getBot():findPath(customizable.seedsX + (customizable.variableSeeds),customizable.seedsY)
                            sleep(100)
                            local count = 0
                            customizable.reconnect(world,doorworldseed,customizable.seedsX + (customizable.variableSeeds),customizable.seedsY)
                            if customizable.seedsX + (customizable.variableSeeds) >= 98 then
                                customizable.seedsY = customizable.seedsY - 1
                                customizable.variableSeeds = 0
                            end
                            getBot():setDirection(false)
                            while getBot():getInventory():getItemCount(seedid) > 0 do
                                getBot():drop(seedid,200)
                                sleep(delaydrop)
                                customizable.reconnect(world,doorworldseed,customizable.seedsX + (customizable.variableSeeds),customizable.seedsY)
                                count = count + 1
                                if count >= 2 then
                                    customizable.variableSeeds = customizable.variableSeeds + 1
                                    goto BACK
                                end
                            end
                        end
                        if getBot():getInventory():getItemCount(seedid) == 0 then
                            break
                        end
                    end
                    sleep(100)
                    break
                end
            else
                initialize[world] = "WRONG DOOR"
                wrong = false
                print("["..pcallBot.."]("..world..") Id door seeds storage is wrong, check ur id door!")
                customizable.botStatics("("..world..") Id door seeds storage is wrong, check ur id door! @everyone")
                customizable.indexSeeds = customizable.indexSeeds + 1
                if customizable.indexSeeds > #worldseed then
                    print("["..pcallBot.."]All seeds storage has reached limit")
                    customizable.botStatics("All seeds storage has reached limit @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                customizable.variableSeeds = 0
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            print("["..pcallBot.."]("..world..") seeds Storage is NUKED, check ur storage!")
            customizable.botStatics("("..world..") seeds Storage is NUKED, check ur storage! @everyone")
            customizable.indexSeeds = customizable.indexSeeds + 1
            if customizable.indexSeeds > #worldseed then
                print("["..pcallBot.."]All seeds storage has reached limit!")
                customizable.botStatics("All seeds storage has reached limit! @everyone")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            customizable.variableSeeds = 0
        end
    end
    initialize[world] = ""..customizable.itemFloat(seedid).."x"
    customizable.initializeOnStorage()
    if clearhistory then
        customizable.worldRandom()
    end
end

customizable.setAuth = function()
    if not pcallBot and proxyServerDatabase then
        getProxyManager().custom_http_proxy = true
        getProxyManager().http_cooldown = delayDataBase
        if useDatabaseForMainProxy then
            getProxyManager().use_main_ip = true -- Use Main IP in Data Proxy Tab.
        end
        if setDatabaseType == "http" then
            addDataProxy(proxyDatabase, Proxy.http) 
        elseif setDatabaseType == "https" then
            addDataProxy(proxyDatabase, Proxy.https)
        elseif setDatabaseType == "socks" then
            addDataProxy(proxyDatabase, Proxy.socks5)
        end
    end
    if not pcallBot and withproxy then
        getProxyManager():setLimit(botperproxy)
        for _, lists in pairs(proxyList) do
            getProxyManager():addProxy(lists)
        end
    end
end

customizable.hookOnTutorial = function(var, netid)
    if var:get(0):getString() == "OnDialogRequest" then
        if var:get(1):getString():find("myWorldsUiTab") then
            getBot():warp(var:get(1):getString():match("add_button|(%w+)|"))
            sleep(4000)
        end
    end
end

customizable.onBackup = function()
    ::BACK::
    for i = customizable.indexBackups, #onBotBackup do
        thread = customizable.split(onBotBackup[i],"([^|]+)")[1]
        threading = customizable.split(onBotBackup[i],"([^|]+)")[2]
        if typeaccount == "normal" then
            getBot():updateBot(thread,threading)
            sleep(delayloginbot)
        elseif typeaccount == "guest" then
            getBot():updateBot(""..customizable.guestId().."",thread,threading)
            sleep(delayloginbot)
        end
        getBot().auto_reconnect = false
        customizable.botStatics("Succes switching bot to : "..getBot().name.."")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                if customizable.typeaccount == "normal" then
                    customizable.writeFile("FailBackup",getBot().name)
                elseif customizable.typeaccount == "guest" then
                    customizable.writeFile("FailBackup",getBot():getLogin().mac .. "|" .. getBot():getLogin().rid)
                end
                customizable.indexBackups = customizable.indexBackups + 1
                if customizable.indexBackups > #onBotBackup then
                    print("["..pcallBot.."]No more bots to switch, sc terminated")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                goto BACK
            end
        end
        if getBot().status == BotStatus.online and getBot().level < switchOnLevel then
            break
        elseif getBot().status == BotStatus.online and getBot().level >= switchOnLevel then
            customizable.indexBackups = customizable.indexBackups + 1
            if customizable.indexBackups > #onBotBackup then
                print("["..pcallBot.."]No more bots to switch, sc terminated")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            goto BACK
        end
    end
    customizable.runningScript()
end

customizable.handler = function()
    if typeaccount == "guest" then
        for i,bot in pairs(botList) do
            local derr = {}
            for id in bot:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(""..customizable.guestId().."",x,y)
            sleep(delayloginbot)
        end
    elseif typeaccount == "normal" then
        for i,list in pairs(botList) do
            local derr = {}
            for id in list:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(x,y)
            sleep(delayloginbot)
        end
    end
    print("Please select all and re-execute script")
end

customizable.doorChecking = function()
    for val, idx in ipairs(customizable.away) do
        if getTile(getBot().x,getBot().y).fg == idx then
            return true
        end
    end
    return false
end

customizable.onPnb = function(info,static,blockid)
    ::BACK::
    print("["..pcallBot.."]Pnb")
    getBot().collect_range = 3
    getBot().auto_collect = true
    if not pnbother then
        botX = 98
        botY = getBot().y
        if botY > 40 then
            botY = botY - 10
        elseif botY < 11 then
            botY = botY + 10
        end
        if getTile(botX,botY).fg ~= 0 and getTile(botX,botY).fg ~= blockid+1 then
            botY = botY - 1
        end
        while not getBot():isInTile(botX,botY) do
            getBot():findPath(botX,botY)
            sleep(500)
            customizable.reconnect(info,static,botX,botY)
        end
        if changeSkin then
            getBot():setSkin(math.random(1, 6))
            sleep(1000)
        end    
        customizable.getBotWords()
        ::val::
        tileX = getBot().x
        tileY = getBot().y
        if pnbtile == 1 then
            while getBot():getInventory():getItemCount(blockid) >= pnbtile do
                if getTile(botX+ 1,botY).bg == 0 or getTile(botX+ 1, botY).fg == 0 then
                    place(1,0,blockid)
                    sleep(delayplace)
                    customizable.reconnect(info,static,botX,botY)
                end
                if getTile(botX + 1,botY).bg ~= 0 or getTile(botX + 1, botY).fg ~= 0 then
                    punch(1,0)
                    sleep(delaypunch)
                    customizable.reconnect(info,static,botX,botY)
                end
                sleep(100)
                if customizable.doorChecking() then
                    getBot():disconnect()
                    sleep(4000)
                    customizable.reconnect(info,static,botX,botY)
                end
                if autoSwitchOnLevel and getBot().level >= switchOnLevel then
                    getBot().auto_collect = false
                    if getBot():getInventory():getItemCount(blockid) >= pnbtile then
                        goto val
                    end
                    if getBot():getInventory():getItemCount(blockid+1) > 0 then
                        customizable.onSeed(info,blockid+1)
                    end
                    customizable.onBackup()
                end
                if getBot().gem_count >= mingems and buypack then
                    getBot().auto_collect = false
                    customizable.buying()
                    customizable.onPack()
                    print("["..pcallBot.."]Pnb")
                    customizable.warp(info,static,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                end
            end
        else
            while getBot():getInventory():getItemCount(blockid) >= pnbtile do
                while customizable.placeitem(botX,botY) do
                    for _,i in pairs(onTile) do
                        if getTile(botX+1,botY + i).fg == 0 and getTile(botX+1,botY + i).bg == 0 then
                            place(1,i,blockid)
                            sleep(delayplace)
                            customizable.reconnect(info,static,botX,botY)
                        end
                        if customizable.doorChecking() then
                            getBot():disconnect()
                            sleep(4000)
                            customizable.reconnect(info,static,botX,botY)
                        end
                    end
                end
                while customizable.punchitem(botX,botY) do
                    for _,i in pairs(onTile) do
                        if getTile(botX+1,botY + i).fg ~= 0 or getTile(botX+1,botY + i).bg ~= 0 then
                            punch(1,i)
                            sleep(delaypunch)
                            customizable.reconnect(info,static,botX,botY)
                        end
                    end
                end
                sleep(100)
                if autoSwitchOnLevel and getBot().level >= switchOnLevel then
                    getBot().auto_collect = false
                    if getBot():getInventory():getItemCount(blockid) >= pnbtile then
                        goto val
                    end
                    if getBot():getInventory():getItemCount(blockid+1) > 0 then
                        customizable.onSeed(info,blockid+1)
                    end
                    customizable.onBackup()
                end
                if getBot().gem_count >= mingems and buypack then
                    getBot().auto_collect = false
                    customizable.buying()
                    customizable.onPack()
                    print("["..pcallBot.."]Pnb")
                    customizable.warp(info,static,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                end
            end
        end
    else
        ::backs::
        for i = customizable.changeWorld, #indexPnb do
            list = indexPnb[i]
            customizable.warp(list,doorWorldPnb,delaywarp)
            customizable.initializeBots()
            if not nuked then
                if not wrong then
                    while not getBot():isInTile(customizable.positionX,customizable.positionY) do
                        getBot():findPath(customizable.positionX,customizable.positionY)
                        sleep(500)
                        customizable.reconnect(list,doorWorldPnb,customizable.positionX,customizable.positionY)
                    end
                    if changeSkin then
                        getBot():setSkin(math.random(1, 6))
                        sleep(1000)
                    end    
                    customizable.getBotWords()
                    botX = getBot().x
                    botY = getBot().y
                    ::val::
                    if pnbtile == 1 then
                        while getBot():getInventory():getItemCount(blockid) >= pnbtile do
                            if getTile(botX + 1,botY).bg ~= 0 or getTile(botX + 1, botY).fg ~= 0 then
                                punch(1,0)
                                sleep(delaypunch)
                                customizable.reconnect(list,doorWorldPnb,customizable.positionX,customizable.positionY)
                            end
                            if getTile(botX+ 1,botY).bg == 0 or getTile(botX+ 1, botY).fg == 0 then
                                place(1,0,blockid)
                                sleep(delayplace)
                                customizable.reconnect(list,doorWorldPnb,customizable.positionX,customizable.positionY)
                            end
                            sleep(100)
                            if customizable.doorChecking() then
                                getBot():disconnect()
                                sleep(4000)
                                customizable.reconnect(list,doorWorldPnb,customizable.positionX,customizable.positionY)
                            end
                            if pnbother and typebot == "normal" then
                                for _, player in pairs(getPlayers()) do
                                    if player.name ~= getBots()[pcallBot].name and player.name ~= customizable.str then
                                        customizable.changeWorld = customizable.changeWorld + 1
                                        if customizable.changeWorld > #indexPnb then
                                            customizable.changeWorld = 1
                                        end
                                        goto backs
                                    end
                                end
                            end
                            if autoSwitchOnLevel and getBot().level >= switchOnLevel then
                                getBot().auto_collect = false
                                if getBot():getInventory():getItemCount(blockid) >= pnbtile then
                                    goto val
                                end
                                if getBot():getInventory():getItemCount(blockid+1) > 0 then
                                    customizable.onSeed(info,blockid+1)
                                end
                                customizable.onBackup()
                            end
                            if getBot().gem_count >= mingems and buypack then
                                getBot().auto_collect = false
                                customizable.buying()
                                customizable.onPack()
                                print("["..pcallBot.."]Pnb")
                                customizable.warp(list,doorWorldPnb,delaywarp)
                                customizable.initializeBots()
                                goto BACK
                            end
                        end
                    else
                        while getBot():getInventory():getItemCount(blockid) >= pnbtile do
                            while customizable.placeitem(botX,botY) do
                                for _,i in pairs(onTile) do
                                    if getTile(botX+1,botY + i).fg == 0 and getTile(botX+1,botY + i).bg == 0 then
                                        place(1,i,blockid)
                                        sleep(delayplace)
                                        customizable.reconnect(list,doorWorldPnb,customizable.positionX,customizable.positionY)
                                    end
                                    if customizable.doorChecking() then
                                        getBot():disconnect()
                                        sleep(4000)
                                        customizable.reconnect(list,doorWorldPnb,customizable.positionX,customizable.positionY)
                                    end
                                end
                            end
                            while customizable.punchitem(botX,botY) do
                                for _,i in pairs(onTile) do
                                    if getTile(botX+1,botY + i).fg ~= 0 or getTile(botX+1,botY + i).bg ~= 0 then
                                        punch(1,i)
                                        sleep(delaypunch)
                                        customizable.reconnect(list,doorWorldPnb,customizable.positionX,customizable.positionY)
                                    end
                                end
                            end
                            sleep(100)
                            if pnbother and typebot == "normal" then
                                for _, player in pairs(getPlayers()) do
                                    if player.name ~= getBots()[pcallBot].name and player.name ~= customizable.str then
                                        customizable.changeWorld = customizable.changeWorld + 1
                                        if customizable.changeWorld > #indexPnb then
                                            customizable.changeWorld = 1
                                        end
                                        goto backs
                                    end
                                end
                            end
                            if autoSwitchOnLevel and getBot().level >= switchOnLevel then
                                getBot().auto_collect = false
                                if getBot():getInventory():getItemCount(blockid) >= pnbtile then
                                    goto val
                                end
                                if getBot():getInventory():getItemCount(blockid+1) > 0 then
                                    customizable.onSeed(info,blockid+1)
                                end
                                customizable.onBackup()
                            end
                            if getBot().gem_count >= mingems and buypack then
                                getBot().auto_collect = false
                                customizable.buying()
                                customizable.onPack()
                                print("["..pcallBot.."]Pnb")
                                customizable.warp(list,doorWorldPnb,delaywarp)
                                customizable.initializeBots()
                                goto BACK
                            end
                        end
                    end
                else
                    wrong = false
                    print("World PNB : "..list.." is Wrong")
                    customizable.botStatics("World PNB : "..list.." is Wrong")
                end
            else
                nuked = false
                print("World PNB : "..list.." is NUKED!, check ur world !!")
                customizable.botStatics("World PNB : "..list.." is NUKED!, check ur world !! @everyone")
                customizable.changeWorld = customizable.changeWorld + 1
                if worldPerbotPnb == 1 then
                    getBot():stopScript()
                else
                    if customizable.changeWorld > #indexPnb then
                        customizable.changeWorld = 1
                    end
                end
            end
            if worldPerbotPnb > 1 then
                customizable.changeWorld = customizable.changeWorld + 1
                if customizable.changeWorld > #indexPnb then
                    customizable.changeWorld = 1
                end
            end
            break
        end
    end
    getBot().auto_collect = false
    customizable.recycles()
end

customizable.itemcheck = function(tbl, int)
    for _,num in pairs(tbl) do
        if num == int then
            return true
        end
    end
    return false
end

customizable.recycles = function()
    for _,item in pairs(getBot():getInventory():getItems()) do
        if not customizable.itemcheck(customizable.notTrashItems,item.id) and not customizable.itemcheck(whitelistItem,item.id) then
            getBot():trash(item.id, getBot():getInventory():getItemCount(item.id))
            sleep(1000)
        end
    end
end

customizable.recheckWorld = function(threads)
    print("["..pcallBot.."]Rechecking")
    for i = 1, 2 do
        for y = 0 , 53, 1 do
            for x = 0 , 99, 1 do
                if getTile(x,y).fg == pointData and getTile(x,y):canHarvest() then
                    if getBot():getInventory():getItemCount(iditemtowear) == 0 then
                        if itemtowear then
                            customizable.wearingItemSup()
                            print("["..pcallBot.."]Rechecking")
                            customizable.warp(threads,doorfarm,delaywarp)
                            customizable.initializeBots()
                        end
                    end
                    if getBot():getInventory():getItemCount(block) > 180 then
                        if pnbother then
                            customizable.onPnb(threads,doorWorldPnb,block)
                            print("["..pcallBot.."]Rechecking")
                            customizable.warp(threads,doorfarm,delaywarp)
                            customizable.initializeBots()
                        else
                            customizable.onPnb(threads,doorfarm,block)
                            print("["..pcallBot.."]Rechecking")
                            customizable.initializeBots()
                        end
                    end
                    if getBot():getInventory():getItemCount(eventList[1]) > amountevent then
                        customizable.onEvent(threads)
                        print("["..pcallBot.."]Rechecking")
                        customizable.warp(threads,doorfarm,delaywarp)
                        customizable.initializeBots()
                    elseif getBot():getInventory():getItemCount(pointData) >= amountseed then
                        if dontplant then
                            customizable.onSeed(threads,pointData)
                            print("["..pcallBot.."]Rechecking")
                            customizable.warp(threads,doorfarm,delaywarp)
                            customizable.initializeBots()
                        else
                            customizable.plant(threads,doorfarm,pointData)
                            if getBot():getInventory():getItemCount(pointData) >= amountseed then
                                customizable.onSeed(threads,pointData)
                                print("["..pcallBot.."]Harvesting")
                                customizable.warp(threads,doorfarm,delaywarp)
                                customizable.initializeBots()
                            end
                        end
                    elseif getBot().gem_count >= mingems and buypack then
                        customizable.buying()
                        customizable.onPack()
                        print("["..pcallBot.."]Rechecking")
                        customizable.warp(threads,doorfarm,delaywarp)
                        customizable.initializeBots()
                    end
                    getBot():findPath(x,y)
                    sleep(30)
                    customizable.reconnect(threads,doorfarm,x,y)
                    if getTile(x,y) == pointData then
                        punch(0,0)
                        sleep(delayharvest)
                        customizable.reconnect(threads,doorfarm,x,y)
                    end
                    getBot():collect(range)
                    sleep(30)
                end
            end
        end
        for _, obj in pairs(getBot():getWorld():getObjects()) do
            if obj.id == block then
                if customizable.itemFloat(block) ~= 0 then
                    getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                    sleep(30)
                    getBot():collect(1)
                    sleep(30)
                    customizable.reconnect(threads,doorfarm,math.floor(obj.x / 32),math.floor(obj.y / 32))
                end
                if getBot():getInventory():getItemCount(block) > 180 then
                    if pnbother then
                        customizable.onPnb(threads,doorWorldPnb,block)
                        print("["..pcallBot.."]Rechecking")
                        customizable.warp(threads,doorfarm,delaywarp)
                        customizable.initializeBots()
                    else
                        customizable.onPnb(threads,doorfarm,block)
                    end
                end
                if getBot():getInventory():getItemCount(eventList[1]) > amountevent then
                    customizable.onEvent(threads)
                    print("["..pcallBot.."]Rechecking")
                    customizable.warp(threads,doorfarm,delaywarp)
                    customizable.initializeBots()
                elseif getBot():getInventory():getItemCount(pointData) >= amountseed then
                    if dontplant then
                        customizable.onSeed(threads,pointData)
                        print("["..pcallBot.."]Rechecking")
                        customizable.warp(threads,doorfarm,delaywarp)
                        customizable.initializeBots()
                    else
                        customizable.plant(threads,doorfarm,pointData)
                        if getBot():getInventory():getItemCount(pointData) >= amountseed then
                            customizable.onSeed(threads,pointData)
                            print("["..pcallBot.."]Rechecking")
                            customizable.warp(threads,doorfarm,delaywarp)
                            customizable.initializeBots()
                        end
                    end
                elseif getBot().gem_count >= mingems and buypack then
                    customizable.buying()
                    customizable.onPack()
                    print("["..pcallBot.."]Rechecking")
                    customizable.warp(threads,doorfarm,delaywarp)
                    customizable.initializeBots()
                end
            end
        end
        if not dontplant then
            for y = 0, 53, 1 do
                for x = 0, 99, 1 do
                    if getTile(x,y).fg == 0 and getTile(x,y).flags ~= 0 and getBot():getInventory():getItemCount(pointData) ~= 0 then
                        if getBot():getInventory():getItemCount(pointData) == 0 then
                            break
                        end
                        getBot():findPath(x,y)
                        sleep(30)
                        customizable.reconnect(threads,doorfarm,x,y)
                        if getTile(x,y) ~= seed then
                            place(x,y,pointData)
                            sleep(delayplant)
                            customizable.reconnect(threads,doorfarm,x,y)
                        end
                    end
                end
            end
        end
    end
end

customizable.onLevelingCheck = function(params)
    print("["..pcallBot.."]Leveling Recheck")
    if getBot().level >= setminlvl then
        for i = 1, 2 do
            for _, obj in pairs(getBot():getWorld():getObjects()) do
                if obj.id == idblockleveling then
                    if customizable.itemFloat(idblockleveling) ~= 0 then
                        getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                        sleep(30)
                        if not ignoregems then
                            getBot():collect(1)
                        end
                        sleep(30)
                        customizable.reconnect(params,doorworldleveling,math.floor(obj.x / 32),math.floor(obj.y / 32))
                    end
                    if getBot():getInventory():getItemCount(idblockleveling) > 180 then
                        if pnbother then
                            customizable.onPnb(params,doorWorldPnb,idblockleveling)
                            print("["..pcallBot.."]Leveling Recheck")
                            customizable.warp(params,doorworldleveling,delaywarp)
                            customizable.initializeBots()
                        else
                            customizable.onPnb(params,doorworldleveling,idblockleveling)
                        end
                    end
                    if getBot():getInventory():getItemCount(eventList[1]) > amountevent then
                        customizable.onEvent(params)
                        print("["..pcallBot.."]Leveling Recheck")
                        customizable.warp(params,doorworldleveling,delaywarp)
                        customizable.initializeBots()
                    elseif getBot():getInventory():getItemCount(idblockleveling+1) >= amountseed then
                        customizable.plant(params,doorworldleveling,idblockleveling+1)
                        if getBot():getInventory():getItemCount(idblockleveling+1) >= amountseed then
                            customizable.onSeed(params,idblockleveling+1)
                            print("["..pcallBot.."]Leveling Recheck")
                            customizable.warp(params,doorworldleveling,delaywarp)
                            customizable.initializeBots()
                        end
                    elseif getBot().gem_count >= mingems and buypack then
                        customizable.buying()
                        customizable.onPack()
                        print("["..pcallBot.."]Leveling Recheck")
                        customizable.warp(params,doorworldleveling,delaywarp)
                        customizable.initializeBots()
                    end
                end
            end
            for y = 0, 53, 1 do
                for x = 0, 99, 1 do
                    if getTile(x,y).fg == 0 and getTile(x,y).flags ~= 0 then
                        getBot():findPath(x,y)
                        sleep(30)
                        customizable.reconnect(params,doorworldleveling,x,y)
                        if getTile(x,y).fg ~= idblockleveling+1 then
                            place(x,y,idblockleveling+1)
                            sleep(delayplant)
                            customizable.reconnect(params,doorworldleveling,x,y)
                        end
                    end
                    if getBot():getInventory():getItemCount(idblockleveling+1) == 0 then
                        break
                    end
                end
            end
            if getBot():getInventory():getItemCount(idblockleveling+1) >= amountseed then
                customizable.onSeed(params,idblockleveling+1)
                print("["..pcallBot.."]Leveling Recheck")
                customizable.warp(params,doorworldleveling,delaywarp)
                customizable.initializeBots()
            end
        end
    end
end

customizable.harvest = function(threads)
    for y = 0, 53, 1 do 
        for x = 0, 99, 1 do
            if getTile(x,y).fg == pointData and getTile(x,y):canHarvest() then
                if getBot():getInventory():getItemCount(block) > 180 then
                    if pnbother then
                        customizable.onPnb(threads,doorWorldPnb,block)
                        print("["..pcallBot.."]Harvesting")
                        customizable.warp(threads,doorfarm,delaywarp)
                        customizable.initializeBots()
                    else
                        customizable.onPnb(threads,doorfarm,block)
                        print("["..pcallBot.."]Harvesting")
                    end
                end
                if getBot():getInventory():getItemCount(iditemtowear) == 0 then
                    if itemtowear then
                        customizable.wearingItemSup()
                        print("["..pcallBot.."]Harvesting")
                        customizable.warp(threads,doorfarm,delaywarp)
                        customizable.initializeBots()
                    end
                end
                if getBot():getInventory():getItemCount(eventList[1]) > amountevent then
                    customizable.onEvent(threads)
                    print("["..pcallBot.."]Harvesting")
                    customizable.warp(threads,doorfarm,delaywarp)
                    customizable.initializeBots()
                elseif getBot():getInventory():getItemCount(pointData) > amountseed then
                    if dontplant then
                        customizable.onSeed(threads,pointData)
                        print("["..pcallBot.."]Harvesting")
                        customizable.warp(threads,doorfarm,delaywarp)
                        customizable.initializeBots()
                    else
                        customizable.plant(threads,doorfarm,pointData)
                        if getBot():getInventory():getItemCount(pointData) >= amountseed then
                            customizable.onSeed(threads,pointData)
                            print("["..pcallBot.."]Harvesting")
                            customizable.warp(threads,doorfarm,delaywarp)
                            customizable.initializeBots()
                        end
                    end
                elseif getBot().gem_count >= mingems and buypack then
                    customizable.buying()
                    customizable.onPack()
                    print("["..pcallBot.."]Harvesting")
                    customizable.warp(threads,doorfarm,delaywarp)
                    customizable.initializeBots()
                end
                getBot():findPath(x,y)
                sleep(30)
                customizable.reconnect(threads,doorfarm,x,y)
                if getTile(x,y).fg == pointData then
                    punch(0,0)
                    sleep(delayharvest)
                    customizable.reconnect(threads,doorfarm,x,y)
                end
                if root then
                    while getTile(x,y+1).fg == (block + 4) do
                        punch(0,1)
                        sleep(delayharvest)
                        customizable.reconnect(threads,doorfarm,x,y)
                    end
                end
                getBot():collect(range)
                sleep(30)
            end
        end
    end
end

customizable.runningOnLeveling = function(params)
    print("["..pcallBot.."]Levelings")
    for y = 0, 53, 1 do
        for x = 0, 99, 1 do
            if getBot().level >= setmaxlvl then
                break
            else
                if getTile(x,y).fg == idblockleveling+1 and getTile(x,y):canHarvest() then
                    if getBot():getInventory():getItemCount(idblockleveling) > 180 then
                        if getBot().level >= setminlvl then
                            if pnbother then
                                customizable.onPnb(params,doorWorldPnb,idblockleveling)
                                print("["..pcallBot.."]Levelings")
                                customizable.warp(params,doorworldleveling,delaywarp)
                                customizable.initializeBots()
                            else
                                customizable.onPnb(params,doorworldleveling,idblockleveling)
                                print("["..pcallBot.."]Levelings")
                            end
                        elseif getBot().level < setminlvl then
                            getBot():sendPacket(2,"action|trash\n|itemID|" .. idblockleveling)
                            sleep(1000)
                            getBot():sendPacket(2,"action|dialog_return\ndialog_name|trash_item\nitemID|" .. idblockleveling .. "|\ncount|" .. getBot():getInventory():getItemCount(idblockleveling))
                            sleep(1000)
                        end
                    end
                    if getBot():getInventory():getItemCount(idblockleveling+1) > amountseed then
                        customizable.plant(params,doorworldleveling,idblockleveling+1)
                        if getBot():getInventory():getItemCount(idblockleveling+1) >= amountseed then
                            customizable.onSeed(params,idblockleveling+1)
                            print("["..pcallBot.."]Levelings")
                            customizable.warp(params,doorworldleveling,delaywarp)
                            customizable.initializeBots()
                        end
                    elseif getBot().gem_count >= mingems and buypack then
                        customizable.buying()
                        customizable.onPack()
                        print("["..pcallBot.."]Levelings")
                        customizable.warp(params,doorworldleveling,delaywarp)
                        customizable.initializeBots()
                    end
                    getBot():findPath(x,y)
                    sleep(30)
                    customizable.reconnect(params,doorworldleveling,x,y)
                    if getTile(x,y).fg == idblockleveling+1 then
                        punch(0,0)
                        sleep(delayharvest)
                        customizable.reconnect(params,doorworldleveling,x,y)
                    end
                    if getBot().level >= setminlvl then
                        getBot():collect(range)
                        sleep(30)
                    end
                end
            end
        end
    end
end

customizable.plant = function(info,static,seedid)
    for y = 0, 53, 1 do
        for x = 0, 99, 1 do
            if getTile(x,y).fg == 0 and getTile(x,y).flags ~= 0 then
                if getBot():getInventory():getItemCount(seedid) == 0 then
                    break
                end
                getBot():findPath(x,y)
                sleep(30)
                customizable.reconnect(info,static,x,y)
                if getTile(x,y).fg ~= seedid then
                    getBot():place(x,y,seedid)
                    sleep(delayplant)
                    customizable.reconnect(info,static,x,y)
                end
            end
        end
    end
end

customizable.storingFirehouse = function()
    print("["..pcallBot.."]Storing Firehouse")
    world = customizable.split(worldFireHouse[reversed],"[^|]+")[1]
    door = customizable.split(worldFireHouse[reversed],"[^|]+")[2]
    customizable.warp(world,door,delaywarp)
    if not nuked then
        if not wrong then
            for i,tile in pairs(getBot():getWorld():getTiles()) do
                if tile.fg == 0 or tile.bg == 0 then
                    getBot():findPath(customizable.jammerX,customizable.jammerY)
                    sleep(100)
                    local count = 0
                    customizable.reconnect(world,door,customizable.jammerX,customizable.jammerY)
                    while getBot():getInventory():getItemCount(3066) > 0 do
                        getBot():drop(3066,200)
                        sleep(delaydrop)
                        customizable.reconnect(world,door,customizable.jammerX,customizable.jammerY)
                    end
                end
                if getBot():getInventory():getItemCount(3066) == 0 then
                    break
                end
            end
        else
            wrong = false
            customizable.botStatics("World to storing Fire House is wrong door id, terminated sc @everyone")
            print("World to storing Fire House is wrong door id, terminated sc")
            getBot():stopScript()
        end
    else
        nuked = false
        customizable.botStatics("World to storing Fire House is NUKED, terminated sc @everyone")
        print("World to storing Fire House is NUKED, terminated sc")
        getBot():stopScript()
    end
end

customizable.botOnLeveling = function()
    for idx, annount in pairs(onLeveling) do
        customizable.warp(annount,doorworldleveling,delaywarp)
        customizable.initializeBots()
        if not nuked then
            if not wrong then
                customizable.runningOnLeveling(annount)
                customizable.onLevelingCheck(annount)
                if getBot().level >= setmaxlvl then
                    break
                end
            else
                wrong = false
                sleep(3000)
                print(""..annount.." is wrong door id, skipped world")
                customizable.botStatics("("..annount..") is wrong door id, skipped world @everyone")
            end
        else
            nuked = false
            sleep(3000)
            print(""..value.." is NUKED!, check ur world !!")
            customizable.botStatics("("..annount..") is NUKED!, check ur world !! @everyone")
        end
    end
end

customizable.htree = function(tree,amount)
    local attempt = 0
    local param = getBot():getWorld().name
    for _,tile in pairs(getBot():getWorld():getTiles()) do
        if tile.fg == tree then
            getBot():findPath(tile.x,tile.y)
            sleep(30)
            customizable.reconnect(param,"",tile.x,tile.y)
            while getBot():getWorld():getTile(tile.x,tile.y).fg ~= 0 do
                getBot():hit(tile.x,tile.y)
                sleep(200)
                customizable.reconnect(param,"",tile.x,tile.y)
            end
            attempt = attempt + 1
        end
        if attempt >= amount then
            break
        end
    end
end

customizable.placedirt = function()
    local param = getBot():getWorld().name
    for tilex = 35, 50 do
        getBot():findPath(tilex,17)
        sleep(30)
        customizable.reconnect(param,"",tilex,17)
        while getBot():getWorld():getTile(tilex,18).fg == 0 do
            getBot():place(tilex,18,2)
            sleep(200)
            customizable.reconnect(param,"",tilex,17)
        end
    end
end

customizable.dirts = function(amount)
    local attempt = 0
    local param = getBot():getWorld().name
    for tiley = 19, 53, 1 do
        for tilex = 0, 6, 1 do
            if getBot():getWorld():getTile(tilex,tiley).fg == 2 then
                getBot():findPath(tilex,tiley - 1)
                sleep(30)
                customizable.reconnect(param,"",tilex,tiley - 1)
                while getBot():getWorld():getTile(tilex,tiley).fg ~= 0 do
                    getBot():hit(tilex,tiley)
                    sleep(200)
                    customizable.reconnect(param,"",tilex,tiley - 1)
                end
                attempt = attempt + 1
            end
            if attempt >= amount then
                break
            end
        end
        if attempt >= amount then
            break
        end
    end
end

customizable.antiToxic = function(threads)
    t = getBot().x
    r = getBot().y
    while getTile(98,0).fg == 778 do
        getBot():findPath(98,1)
        sleep(500)
        punch(0,-1)
        sleep(200)
        customizable.reconnect(threads,doorfarm,98,1)
    end
    while getTile(99,0).fg == 778 do
        getBot():findPath(98,1)
        sleep(500)
        punch(1,-1)
        sleep(200)
        customizable.reconnect(threads,doorfarm,98,1)
    end
    while getTile(0,0).fg == 778 do
        getBot():findPath(1,1)
        sleep(500)
        punch(-1,-1)
        sleep(200)
        customizable.reconnect(threads,doorfarm,1,1)
    end
    while getTile(1,0).fg == 778 do
        getBot():findPath(1,1)
        sleep(500)
        punch(0,-1)
        sleep(200)
        customizable.reconnect(threads,doorfarm,1,1)
    end
    for y = 0,53 do
        if getTile(0,y).fg == 778 then
            while getTile(0,y).fg == 778 do
                getBot():findPath(0,y-1)
                sleep(100)
                punch(0,1)
                sleep(170)
                customizable.reconnect(threads,doorfarm,0,y-1)
            end
        end
    end
    for x = 2, 97 do
        if getTile(x,0).fg == 778 then
            while getTile(x,0).fg == 778 do
                getBot():findPath(x-1,0)
                sleep(100)
                punch(1,0)
                sleep(170)
                customizable.reconnect(threads,doorfarm,x-1,0)
            end
        end
    end
    for x = 2,97 do
        if getTile(x,1).fg == 778 then
            while getTile(x,1).fg == 778 do
                getBot():findPath(x-1,1)
                sleep(100)
                punch(1,0)
                sleep(170)
                customizable.reconnect(threads,doorfarm,x-1,1)
            end
        end
    end
    for y = 0,53 do
        if getTile(99,y).fg == 778 then
            while getTile(99,y).fg == 778 do
                getBot():findPath(99,y-1)
                sleep(100)
                punch(0,1)
                sleep(170)
                customizable.reconnect(threads,doorfarm,99,y-1)
            end
        end
    end
    for y = 0, 53, 1 do
        for x = 0, 99, 1 do
            if getTile(x,y).fg == 778 then
                while getTile(x,y).fg == 778 do
                    getBot():findPath(x,y-2)
                    sleep(100)
                    punch(0,2)
                    sleep(160)
                    customizable.reconnect(threads,doorfarm,x,y-2)
                end
            end
        end
    end
end

customizable.flagsCheck = function(id)
    local count = 0
    for _, tile in pairs(getBot():getWorld():getTiles()) do
        if tile:hasFlag(id) then
            count = count + 1
        end
    end
    return count
end

customizable.antiFire = function(threads)
    t = getBot().x
    r = getBot().y
    if customizable.flagsCheck(4096) > 0 then
        for _,tile in pairs(getBot():getWorld():getTiles()) do
            if tile:hasFlag(4096) then
                if getTile(tile.x,tile.y + 1).flags ~= 0 then
                    getBot():findPath(tile.x,tile.y + 1)
                    sleep(100)
                    customizable.reconnect(threads,doorfarm,tile.x,tile.y + 1)
                    if getTile(t,r+1).fg ~= 4096 then
                        for x = -2, 2 do
                            for y = -2 , 2 do
                                if getTile(t+x,r+y).fg ~= 4096 then
                                    punch(x,y)
                                    sleep(250)
                                    customizable.reconnect(threads,doorfarm,tile.x,tile.y + 1)
                                end
                            end
                        end
                    end
                elseif getTile(tile.x,tile.y - 1).flags ~= 0 then
                    getBot():findPath(tile.x,tile.y - 1)
                    sleep(100)
                    customizable.reconnect(threads,doorfarm,tile.x,tile.y - 1)
                    if getTile(t,r-1).fg ~= 4096 then
                        for x = -2, 2 do
                            for y = -2 , 2 do
                                if getTile(t+x,r+y).fg ~= 4096 then
                                    punch(x,y)
                                    sleep(250)
                                    customizable.reconnect(threads,doorfarm,tile.x,tile.y - 1)
                                end
                            end
                        end
                    end
                elseif getTile(tile.x + 1,tile.y).flags ~= 0 then
                    getBot():findPath(tile.x + 1,tile.y)
                    sleep(100)
                    customizable.reconnect(threads,doorfarm,tile.x + 1,tile.y)
                    if getTile(t+1,r).fg ~= 4096 then
                        for x = -2, 2 do
                            for y = -2 , 2 do
                                if getTile(t+x,r+y).fg ~= 4096 then
                                    punch(x,y)
                                    sleep(250)
                                    customizable.reconnect(threads,doorfarm,tile.x + 1,tile.y)
                                end
                            end
                        end
                    end
                elseif getTile(tile.x - 1,tile.y).flags ~= 0 then
                    getBot():findPath(tile.x - 1,tile.y)
                    sleep(100)
                    customizable.reconnect(threads,doorfarm,tile.x - 1,tile.y)
                    if getTile(t-1,r).fg ~= 4096 then
                        for x = -2, 2 do
                            for y = -2 , 2 do
                                if getTile(t+x,r+y).fg ~= 4096 then
                                    punch(x,y)
                                    sleep(250)
                                    customizable.reconnect(threads,doorfarm,tile.x - 1,tile.y)
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

customizable.findDirt = function(amount)
    local param = getBot():getWorld().name
    for tiley = 19, 53, 1 do
        for tilex = 0, 6, 1 do
            if getBot():getWorld():getTile(tilex,tiley).fg ~= 0 then
                getBot():findPath(tilex,tiley - 1)
                sleep(30)
                customizable.reconnect(param,"",tilex,tiley - 1)
                while getBot():getWorld():getTile(tilex,tiley).fg ~= 0 do
                    getBot():hit(tilex,tiley)
                    sleep(200)
                    customizable.reconnect(param,"",tilex,tiley - 1)
                end
            end
            if getBot():getInventory():getItemCount(3) >= amount then
                break
            end
        end
        if getBot():getInventory():getItemCount(3) >= amount then
            break
        end
    end
end

customizable.placeWood = function()
    local param = getBot():getWorld().name
    for tilex = 35, 56 do
        getBot():findPath(tilex,14)
        sleep(30)
        customizable.reconnect(param,"",tilex,14)
        while getBot():getWorld():getTile(tilex,15).fg == 0 do
            getBot():place(tilex,15,100)
            sleep(200)
            customizable.reconnect(param,"",tilex,14)
        end
    end
end

customizable.breakWood = function()
    local param = getBot():getWorld().name
    for tilex = 35, 56 do
        getBot():findPath(tilex,14)
        sleep(30)
        customizable.reconnect(param,"",tilex,14)
        while getBot():getWorld():getTile(tilex,15).fg ~= 0 do
            getBot():hit(tilex,15)
            sleep(200)
            customizable.reconnect(param,"",tilex,14)
        end
        if getBot():getInventory():getItemCount(101) > 4 then
            break
        end
    end
end

customizable.planting = function(tree,amount)
    local param = getBot():getWorld().name
    local attempt = 0
    for tilex = 35, 50 do
        if getBot():getWorld():getTile(tilex,17).fg == 0 then
            getBot():findPath(tilex,17)
            sleep(30)
            customizable.reconnect(param,"",tilex,17)
            while getBot():getWorld():getTile(tilex,17).fg == 0 do
                getBot():place(tilex,17,tree)
                sleep(200)
                customizable.reconnect(param,"",tilex,17)
            end
            attempt = attempt + 1
        end
        if attempt >= amount then
            break
        end
    end
end

customizable.ttree = function(tree)
    local attempt = 0
    local param = getBot():getWorld().name
    for tilex = 35, 50 do
        if getBot():getWorld():getTile(tilex,17).fg ~= 0 then
            getBot():findPath(tilex,17)
            sleep(30)
            customizable.reconnect(param,"",tilex,17)
            while getBot():getWorld():getTile(tilex,17).fg ~= 0 do
                getBot():hit(tilex,17)
                sleep(200)
                customizable.reconnect(param,"",tilex,17)
            end
            attempt = attempt + 1
        end
        if attempt >= 10 then
            break
        end
    end
end

customizable.splice = function(item1,item2,amount)
    local attempt = 0
    local param = getBot():getWorld().name
    for tilex = 35, 45 do
        if getBot():getWorld():getTile(tilex,17).fg == 0 then
            getBot():findPath(tilex,17)
            sleep(30)
            customizable.reconnect(param,"",tilex,17)
            while getBot():getWorld():getTile(tilex,17).fg == 0 do
                getBot():place(tilex,17,item1)
                sleep(200)
                customizable.reconnect(param,"",tilex,17)
            end
            while getBot():getWorld():getTile(tilex,17).fg == item1 do
                getBot():place(tilex,17,item2)
                sleep(200)
                customizable.reconnect(param,"",tilex,17)
            end
            attempt = attempt + 1
        end
        if attempt >= amount then
            break
        end
    end
end

customizable.breakBlock = function(id,target)
    local param = getBot():getWorld().name
    for _, obj in pairs(getBot():getWorld():getObjects()) do
        if obj.id == id then
            getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
            sleep(1000)
            customizable.reconnect(param,"",getBot().x,getBot().y)
        end
    end
    while getBot():getInventory():getItemCount(id+1) < target do
        while getBot():getWorld():getTile(getBot().x,getBot().y-1).fg == 0 do
            getBot():place(getBot().x,getBot().y-1,id)
            sleep(210)
            customizable.reconnect(param,"",getBot().x,getBot().y)
        end
        while getBot():getWorld():getTile(getBot().x,getBot().y-1).fg ~= 0 do
            getBot():hit(getBot().x,getBot().y-1)
            sleep(210)
            customizable.reconnect(param,"",getBot().x,getBot().y)
        end
        sleep(500)
    end
end

customizable.algorithm = function()
    getBot().collect_range = 3
    getBot().collect_interval = 200
    getBot().object_collect_delay = 110
    getBot().auto_collect = true
    customizable.initializeBots()
    for _, tile in pairs(getBot():getWorld():getTiles()) do
        if tile.fg == 11 and tile:canHarvest() then
            customizable.htree(3,5)
            sleep(200)
            customizable.placedirt()
            sleep(200)
            customizable.dirts(20)
            sleep(200)
            customizable.findDirt(11)
            customizable.planting(3,10)
            sleep(31000)
            customizable.ttree(3)
            sleep(200)
            customizable.htree(11,10)
            sleep(200)
            for i = 1,5 do
                getBot():drop(11,200)
                sleep(2000)
            end
            sleep(200)
            customizable.htree(5,9)
            sleep(200)
            customizable.breakBlock(4,10)
            sleep(200)
            customizable.findDirt(12)
            sleep(200)
            customizable.splice(3,5,10)
            sleep(68000)
            customizable.ttree(101)
            sleep(200)
            customizable.placeWood()
            sleep(200)
            customizable.breakWood()
            sleep(200)
            customizable.splice(101,3,1)
            sleep(122000)
            getBot():hit(getBot().x,getBot().y)
            sleep(1000)
        end
    end
    getBot().auto_collect = false
end

customizable.runningScript = function()
    while getBot():getInventory():getItemCount(9640) > 0 do
        customizable.warp(customizable.guestId(),"",3000)
        while getTile(getBot().x,getBot().y - 1).fg ~= 9640 do
            getBot():place(0,-1,9640)
            sleep(delayplace)
        end
    end
    if autoSkipQuest then
        ::tutor::
        while not getBot():isInWorld() do
            customizable.warp(customizable.guestId(),"",5000)
        end
        print("["..pcallBot.."]Skipping tutorial")
        addEvent(Event.variantlist, customizable.hookOnTutorial)
        runThread(function()
            getBot():sendPacket(2, "action|wrench\n|netid|"..getLocal().netid)
            sleep(1000)
            getBot():sendPacket(2, "action|dialog_return\ndialog_name|popup\nnetID|"..getLocal().netid.."|\nbuttonClicked|my_worlds")
            sleep(1000)
        end)    
        listenEvents(5)
        if not getBot():isInWorld() then
            goto tutor
        end
        customizable.algorithm()
    end
    if pickaxe then
        while getBot():getInventory():getItemCount(98) == 0 and getBot().status == BotStatus.online do
            customizable.wearingPick()
            sleep(6000)
        end
    end
    if leveling and getBot().level < setmaxlvl then
        customizable.botOnLeveling()
    end
    while true do
        for idx, value in ipairs(onFarmList) do
            customizable.warp(value,doorfarm,delaywarp)
            customizable.initializeBots()
            if not nuked then
                if not wrong then
                    if clearToxic then
                        while customizable.scanBlock(778) > 0 do
                            customizable.antiToxic(value)
                        end
                    end
                    if clearFire then
                        if customizable.flagsCheck(4096) > 0 then
                            while getBot():getInventory():getItemCount(3066) == 0 do
                                customizable.takeFirehouse()
                                sleep(6000)
                            end
                            customizable.warp(value,doorfarm,delaywarp)
                        end
                        while customizable.flagsCheck(4096) > 0 do
                            customizable.antiFire(value)
                        end
                        if getBot():getInventory():getItemCount(3066) > 0 then
                            customizable.storingFirehouse()
                        end
                        if getBot():getInventory():getItemCount(98) > 0 then
                            getBot():wear(98)
                            sleep(2000)
                        end
                    end
                    customizable.warp(value,doorfarm,delaywarp)
                    realtime = os.time() - customizable.formatTime
                    customizable.harvest(value)
                    customizable.recheckWorld(value)
                    customizable.farmInfo("["..pcallBot.."]"..value.." : "..math.floor(realtime/3600).." Hours "..math.floor(realtime%3600/60).." Minutes") 
                    if clearhistoryAfterdoneFarm then
                        customizable.worldRandom()
                    end
                    if restAfterDoneFarm then
                        print("["..pcallBot.."]Resting after farm")
                        getBot():sendPacket(3,"action|join_request\nname|EXIT\ninvitedWorld|0")
                        sleep(delayRestAfterDoneFarm * 60000)
                    end
                else
                    wrong = false
                    customizable.writeFile("worldinfo","("..value..") is wrong id")
                    print("["..pcallBot.."]"..value.." is wrong door id, skipped world")
                    customizable.botStatics("("..value..") is wrong door id, skipped world @everyone")
                end
            else
                nuked = false
                customizable.writeFile("worldinfo","("..value..") is NUKED !!")
                print("["..pcallBot.."]"..value.." is NUKED!, check ur world !!")
                customizable.botStatics("("..value..") is NUKED!, check ur world !! @everyone")
            end
        end
        if not looping then
            if getBot():getInventory():getItemCount(pointData) > 0 then
                customizable.onSeed(threads,pointData)
            end
            customizable.warp(customizable.guestId(),"",delaywarp)
            print("["..pcallBot.."]Already finished all world")
            customizable.botStatics("("..getBot().name..") Already finished all world, Terminated script! @everyone")
            if removingbot then
                removeBot()
                sleep(1500)
            end 
            print("["..pcallBot.."]Finished all world")
            break
        else
            sleep(5000)
        end
    end
end

if Information == "Script Rotation made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq" and scriptVersion == "0.4" then
    if autologin and not pcallBot then
        customizable.setAuth()
        customizable.handler()
    end
    while getBot().status ~= BotStatus.online do
        getBot():connect()
        sleep(delayreconnect)
    end
    sleep(pcallBot * delayexecute)
    customizable.runningScript()
else
    print("["..pcallBot.."]Script Rotation made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
    customizable.botStatics("Script Rotation made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
end

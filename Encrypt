for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        indexbot = i
    end
end

tilebreak = {}
infoevent = {}
infoseed = {}
infopack = {}
lvling = {}
worlds = {}
sjam = {}
backups = {}
index = 1
local tileBlock = 0
local tileSeed = 0
local tilePack = 0
local tileEvent = 0
local tileJammer = 0
local setting = {
    seed = 1,
    pack = 1,
    drop = 1,
    event = 1,
    backup = 1,
    timechecker = os.time(),
    take = 1
}
blockX = dropblockX - 1
blockX = dropblockY - 1
jammerX = dropjammerX - 1
jammerY = dropjammerY - 1
seedX = dropseedX - 1
seedY = dropseedY - 1
packX = droppackX - 1
packY = droppackY - 1
eventX = dropeventX - 1
eventY = dropeventY - 1
posX = customBreakX - 1
posY = customBreakY - 1
seed = block + 1

if indexbot then
    getBot().auto_reconnect = false
    getBot().legit_mode = false
    for i = 1,worldperbotjammer do
        table.insert(sjam,worldtotakeback[math.floor((indexbot - 1) * worldperbotjammer + i)])
    end
    for i = 1,worldperbot do
        table.insert(lvling,worldleveling[math.floor((indexbot - 1) * worldperbot + i)])
    end
    for i =  1,farmperbot do
        table.insert(worlds,worldfarm[math.floor((indexbot - 1) * farmperbot + i)])
    end
    for i =  1,botperswitch do
        table.insert(backups,botSwitch[math.floor((indexbot - 1) * botperswitch + i)])
    end
    if botRest then
        getBot().auto_rest_mode = true
        getBot().rest_time = botRestTime
        getBot().rest_interval = botRestInterval
        if disconnectOnRest then
            getBot().disconnect_on_rest = true
        end
    end
end

setting.randomletter = function()
    local letter = ""
    local function stringRandom()
        local random = math.random(1,3)
        if random == 1 then
            return string.char(math.random(97,122))
        elseif random == 2 then
            return string.char(math.random(65,90))
        else
            return string.char(math.random(48,57))
        end
    end
    for i = 1, lettername do
        letter = letter..stringRandom()
    end
    return letter
end

setting.wordsrandom = function()
    if sayingrandomwords then
        local random = {
            "Cuma senyuman doang, udah bikin gemes.",
            "Bentar lagi uda jarang ni lu nongkrong di sini.",
            "Kita ngapain sih, ikut-ikutan heboh?",
            "Gue tuh selalu berusaha baik, tapi gimana ya.",
            "Gak usah diambil pusing, santai aja dulu.",
            "Jangan sok asik, tuh keliatan banget.",
            "Santai aja dulu, gak usah tegang.",
            "Jangan bawa drama-dramaan, capek.",
            "Gak usah dibawa serius, nanti malah stress.",
            "Gue tuh kalem, gak usah ribut.",
            "Lagi asik nongkrong, ada yang ngomongin.",
            "Buat apa pake jaim-jaim, santai aja.",
            "Lagi asik main game, tiba-tiba ada yang gangguin.",
            "Gak usah sok asik, keliatan banget.",
            "Nggak perlu pake baper, gak ada gunanya.",
            "Gue gak peduliin, tinggalin aja.",
            "Santai aja dulu, gak usah terlalu serius.",
            "Nggak usah diambil pusing, biar enak.",
            "Hati-hati, banyak orang munafik.",
            "Lagi pada heboh semua, bikin geger.",
            "Gak usah pake jaim-jaim, santai aja.",
            "Lagi dengerin lagu enak, bawaannya pengen joget.",
            "Nih, lagi pada rame-rame di tempat baru.",
            "Gue tuh kalem, gak perlu ribut.",
            "Udah capek-capek ngomong, gak dengerin juga.",
            "Asik banget nih, liburan seru.",
            "Gak usah sok asik, keliatan banget.",
            "Bentar lagi weekend, pasti seru banget nih.",
            "Cuma bisa doa aja, gimana lagi.",
            "Lagi asik main, ada yang gangguin.",
            "Gue gak peduliin, tinggalin aja.",
            "Lagi mikirin, gak usah bener-bener serius.",
            "Jangan dibawa serius, nanti malah stress.",
            "Kondisi lagi kacau, gak karuan banget.",
            "Nih, jualan makanan enak banget di sini.",
        }
        local idx = math.random(1, #random)
        local words = random[idx]
        getBot():say(words)
        sleep(4000)
    end
end

setting.generate = function()
    local alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    local withnum = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    local generate = ""
    for i = 1,letter do
        local random = math.random(1,#alphabet)
        local randomnumber = math.random(1,#withnum)
        local acakalpa = string.sub(alphabet,random,random)
        local acaknomor = string.sub(withnum,randomnumber,randomnumber)
        if withnumber then
            generate = generate..acaknomor
        else
            generate = generate..acakalpa
        end
    end
    return generate
end
local find = setting.generate()

setting.split = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

for i = math.floor(pnbtile/2),1,-1 do
    i = i * -1
    table.insert(tilebreak,i)
end
for i = 0, math.ceil(pnbtile/2) - 1 do
    table.insert(tilebreak,i)
end

findItem = function(id)
    return getBot():getInventory():getItemCount(id)
end

place = function(id,ex,ye)
    getBot():place(getBot().x+ex,getBot().y+ye,id)
end

punch = function(ex,ye)
    getBot():hit(getBot().x+ex,getBot().y+ye)
end

move = function(x,y)
    getBot():moveTo(x,y)
end

findPath = function(x,y)
    getBot():findPath(x,y)
end

setting.punchitem = function(x,y)
    for _,num in pairs(tilebreak) do
        if getTile(x + 1,y + num).fg ~= 0 or getTile(x + 1,y + num).bg ~= 0 then
            return true
        end
    end
    return false
end

setting.placeitem = function(x,y)
    for _,num in pairs(tilebreak) do
        if getTile(x + 1,y + num).fg == 0 and getTile(x + 1,y + num).bg == 0 then
            return true
        end
    end
    return false
end

setting.itemFloat = function(id)
    return getBot():getWorld().growscan:getObjects()[id] or 0
end

setting.writeFile = function(info,text)
    local file = io.open(""..info..".txt","a")
    file:write(text.."\n")
    file:close()
end

setting.getEnetBot = function()
    str = ""
    if not shortWebhookText then
        for i, list in pairs(getBots()) do
            if list.status == BotStatus.online then
                Status = "ONLINE"
            elseif list.status == BotStatus.account_banned  then
                Status = "SUSPENDED"
            elseif list.status == BotStatus.error_connecting  then
                Status = "ERCON"
            else
                Status = "DISCONNECT"
            end
            str = str.."\n"..Status.."" 
        end
        return str
    else
        for i, list in pairs(getBots()) do
            if list.status == BotStatus.online then
                Status = "ON"
            elseif list.status == BotStatus.account_banned  then
                Status = "SUS"
            elseif list.status == BotStatus.error_connecting  then
                Status = "ERCON"
            else
                Status = "OFF"
            end
            str = str.."\n"..Status.."" 
        end
        return str
    end
end

setting.botstatus = function()
    str = ""
    if not shortWebhookText then
        if not hiddenWebhook then
            for _, bot in pairs(getBots()) do
                str = str.."\n["..bot.level.."]"..string.upper(bot.name).."" 
            end
            return str
        else
            for _, bot in pairs(getBots()) do
                str = str.."\n["..bot.level.."]||"..string.upper(bot.name).."||" 
            end
            return str
        end
    else
        if not hiddenWebhook then
            for _, bot in pairs(getBots()) do
                str = str.."\n["..bot.level.."]"..string.sub(bot.name,1,3).."" 
            end
            return str
        else
            for _, bot in pairs(getBots()) do
                str = str.."\n["..bot.level.."]||"..string.sub(bot.name,1,3).."||" 
            end
            return str
        end
    end
end

setting.botworld = function()
    str = ""
    if not shortWebhookText then
        if not hiddenWebhook then
            for _, bots in pairs(getBots()) do
                str = str.."\n"..string.upper(bots:getWorld().name).."" 
            end
            return str
        else
            for _, bots in pairs(getBots()) do
                str = str.."\n||"..string.upper(bots:getWorld().name).."||" 
            end
            return str
        end
    else
        if not hiddenWebhook then
            for _, bots in pairs(getBots()) do
                str = str.."\n"..string.sub(bots:getWorld().name,1,3).."" 
            end
            return str
        else
            for _, bots in pairs(getBots()) do
                str = str.."\n||"..string.sub(bots:getWorld().name,1,3).."||" 
            end
            return str
        end
    end
end

setting.hookseed = function()
    str = ""
    if not shortWebhookText then
        if not hiddenWebhook then
            for i = 1, #worldseed do
                str = str.."\n"..string.upper(worldseed[i]).." : "..(infoseed[worldseed[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldseed do
                str = str.."\n||"..string.upper(worldseed[i]).."|| : "..(infoseed[worldseed[i]] or "?")..""
            end
            return str
        end
    else
        if not hiddenWebhook then
            for i = 1, #worldseed do
                str = str.."\n"..string.sub(worldseed[i],1,3).." : "..(infoseed[worldseed[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldseed do
                str = str.."\n||"..string.sub(worldseed[i],1,3).."|| : "..(infoseed[worldseed[i]] or "?")..""
            end
            return str
        end
    end
end

setting.hookpack = function()
    str = ""
    if not shortWebhookText then
        if not hiddenWebhook then
            for i = 1, #worldpack do
                str = str.."\n"..string.upper(worldpack[i]).." : "..(infopack[worldpack[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldpack do
                str = str.."\n||"..string.upper(worldpack[i]).."|| : "..(infopack[worldpack[i]] or "?")..""
            end
            return str
        end
    else
        if not hiddenWebhook then
            for i = 1, #worldpack do
                str = str.."\n"..string.sub(worldpack[i],1,3).." : "..(infopack[worldpack[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldpack do
                str = str.."\n||"..string.sub(worldpack[i],1,3).."|| : "..(infopack[worldpack[i]] or "?")..""
            end
            return str
        end
    end
end

setting.hookevent = function()
    str = ""
    if not shortWebhookText then
        if not hiddenWebhook then
            for i = 1, #worldevent do
                str = str.."\n"..string.upper(worldevent[i]).." : "..(infoevent[worldevent[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldevent do
                str = str.."\n||"..string.upper(worldevent[i]).."|| : "..(infoevent[worldevent[i]] or "?")..""
            end
            return str
        end
    else
        if not hiddenWebhook then
            for i = 1, #worldevent do
                str = str.."\n"..string.sub(worldevent[i],1,3).." : "..(infoevent[worldevent[i]] or "?")..""
            end
            return str
        else
            for i = 1, #worldevent do
                str = str.."\n||"..string.sub(worldevent[i],1,3).."|| : "..(infoevent[worldevent[i]] or "?")..""
            end
            return str
        end
    end
end

setting.botgems = function()
    local count = 0
    for _,bot in pairs(getBots()) do
        count = count + bot.gem_count
    end
    return count
end

setting.botinfo = function(content)
	if webhookstatus then
		text = [[
			$webHookUrl = "]]..webhookstatuslink..[["
			$payload = @{
				content = "]]..content..[["
			}
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
			Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
		]]
		local file = io.popen("powershell -command -", "w")
		file:write(text)
		file:close()
	end
end

setting.webhookinfo = function()
	if botinfo then
        realtime = os.time() - setting.timechecker
        local text = [[
            $webHookUrl = "]]..linkbotinfo..[[/messages/]]..messageidbotinfo..[["
            $payload = @{
                username = "Debra's"
                embeds = @(
                    @{
                        title = "Caramoy Syndicate : https://discord.com/invite/fTTKW8vvuq"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]].."RUNTIME : "..math.floor(realtime/86400).." Days "..math.floor(realtime%86400/3600).." Hours "..math.floor(realtime%86400%3600/60).." Minutes"..[["
                                inline = "false"
                            }
                            @{
                                name = ""
                                value = "]].."TOTAL GEMS : "..setting.botgems()..[["
                                inline = "false"
                            }
                            @{
                                name = "BOTNAME"
                                value = "]]..setting.botstatus()..[["
                                inline = "true"
                            }
                            @{
                                name = "WORLD"
                                value = "]]..setting.botworld()..[["
                                inline = "true"
                            }
                            @{
                                name = "STATUS"
                                value = "]]..setting.getEnetBot()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE SEED"
                                value = "]]..setting.hookseed()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE PACK"
                                value = "]]..setting.hookpack()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE EVENT"
                                value = "]]..setting.hookevent()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Lucifer] : Rotation Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

setting.reconnect = function(world,id,x,y)
    if getBot():getPing() == 0 then
        getBot():disconnect()
        sleep(4000)
    end
    if not getBot():isInWorld(world:upper()) and getBot().status == BotStatus.online then 
        setting.botinfo("[ "..getBot().name.." ] at another world, trying to joining world again @everyone")
        local count = 0
        while not getBot():isInWorld(world:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."\ninvitedWorld|0")
            sleep(delaywarp)
            if not getBot():isInWorld(world:upper()) then 
                count = count + 1
                if count > 5 then
                    setting.botinfo("[ "..getBot().name.." ] Failed to joining world again, terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if id ~= "" then
            local stucks = 0
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
                if stucks > 3 then
                    setting.botinfo("[ "..getBot().name.." ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        setting.botinfo("[ "..getBot().name.." ] success to joining world @everyone")
    end
    if getBot().status ~= BotStatus.online then
        setting.botinfo("[ "..getBot().name.." ] status is offline @everyone")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                setting.botinfo("[ "..getBot().name.." ] status is suspended, removing bot @everyone")
                getBot():stopScript()
            end
        end
        local counts = 0
        while not getBot():isInWorld(world:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."\ninvitedWorld|0")
            sleep(delaywarp)
            if not getBot():isInWorld(world:upper()) then 
                counts = counts + 1
                if counts > 5 then
                    setting.botinfo("[ "..getBot().name.." ] Failed to joining world again, terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if id ~= "" then
            local stuckk = 0
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
                if stuckk > 3 then
                    setting.botinfo("[ "..getBot().name.." ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        setting.botinfo("[ "..getBot().name.." ] status is online @everyone")
    end
    if getTile(getBot().x,getBot().y).fg == 6 then
        setting.botinfo("[ "..getBot().name.." ] Stuck at white door ! @everyone")
        local stuck = 0
        if id ~= "" then
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
                if stuck > 3 then
                    setting.botinfo("[ "..getBot().name.." ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        setting.botinfo("[ "..getBot().name.." ] Already back to pos ! @everyone")
    end
end

setting.buying = function()
    print("["..indexbot.."]Buying packs")
    if upbackpack then
        while getBot():getInventory().slotcount < 36 do
            getBot():sendPacket(2,"action|buy\nitem|upgrade_backpack")
            sleep(1000)
        end
    end
    while getBot().gem_count >= pricepack do
        getBot():sendPacket(2,"action|buy\nitem|"..debug)
        sleep(1000)
        if findItem(packList[1]) >= 200 then
            break
        end
    end
end

setting.storingblocks = function(info,blockid)
    for i = setting.drop , #worldBlock do
        ::Here::
        world = setting.split(worldBlock[index],"[^:]+")[1]
        door = setting.split(worldBlock[index],"[^:]+")[2]
        print("["..indexbot.."]Dropping Blocks")
        setting.warp(world,door,delaywarp)
        setting.webhookinfo()
        if not subserver then
            if not nuked then
                if not wrong then
                    for i,tile in pairs(getBot():getWorld():getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::BACK::
                            findPath(blockX + (tileBlock),blockY)
                            sleep(1000)
                            local count = 0
                            setting.reconnect(world,door,blockX + (tileBlock),blockY)
                            if blockX + (tileBlock) >= 98 then
                                blockY = blockY - 1
                                tileBlock = 0
                            end
                            while findItem(blockid) > 0 do
                                getBot():drop(blockid,200)
                                sleep(delaydrop)
                                setting.reconnect(world,door,blockX + (tileBlock),blockY)
                                count = count + 1
                                if count >= 2 then
                                    tileBlock = tileBlock + 1
                                    goto BACK
                                end
                            end
                        end
                        if findItem(blockid) == 0 then
                            break
                        end
                    end
                    sleep(100)
                    break
                else
                    wrong = false
                    sleep(5000)
                    print("["..indexbot.."]("..world..") Id door blocks storage is wrong, check ur id door!")
                    setting.botinfo("("..world..") Id door blocks storage is wrong, check ur id door! @everyone")
                    getBot():stopScript()
                end
            else
                nuked = false
                sleep(5000)
                print("["..indexbot.."]("..world..") blocks Storage is NUKED, check ur storage!")
                setting.botinfo("("..world..") blocks Storage is NUKED, check ur storage! @everyone")
                getBot():stopScript()
            end
        else
            subserver = false
            sleep(5000)
            print("["..indexbot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            goto Here
        end
    end
end

setting.joinworld = function()
    print("["..indexbot.."]Clearing history")
    for _, world in pairs(worldclearhistory) do
        ::BACK::
        setting.warp(world,"",5000)
        if not subserver then
            if not nuked then
                while getTile(getBot().x,getBot().y).fg == 6 do
                    move(1,0)
                    sleep(500)
                    setting.reconnect(world,"")
                end
                setting.wordsrandom()
            else
                nuked = false
                sleep(5000)
                print("["..indexbot.."]World clearing history has nuked or higher level!!, change ur world history list")
                setting.botinfo("World clearing history has nuked or higher level!!, change ur world history list. SC Terminated @everyone")
                getBot():stopScript()
            end
        else
            subserver = false
            sleep(5000)
            print("["..indexbot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            goto BACK
        end
    end
end

setting.warp = function(world,door,cooldown)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if not getBot():isInWorld(world:upper()) then
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == "OnConsoleMessage" then
                if variant:get(1):getString():lower():find("inaccessible.") then
                    nuked = true
                end
                if variant:get(1):getString():lower():find("experiencing ") then
                    subserver = true
                end
            end
        end)
        while not getBot():isInWorld(world:upper()) and not nuked and not subserver do
            if getBot():getPing() == 0 then
                getBot():disconnect()
                sleep(2000)
            end
            while getBot().status ~= BotStatus.online do
                getBot():connect()
                sleep(delayreconnect)
                if getBot().status == BotStatus.account_banned then
                    setting.botinfo("[ "..getBot().name.." ] status is suspended, removing bot @everyone")
                    getBot():stopScript()
                end
            end
            getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
            listenEvents(8)
            sleep(cooldown)
        end
        removeEvents()
        sleep(2000)
    end
    if getBot():isInWorld(world:upper()) then
        if door ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 and not wrong do
                if getBot():getPing() == 0 then
                    getBot():disconnect()
                    sleep(4000)
                end
                while getBot().status ~= BotStatus.online do
                    getBot():connect()
                    sleep(delayreconnect)
                    if getBot().status == BotStatus.account_banned then
                        setting.botinfo("[ "..getBot().name.." ] status is suspended, removing bot @everyone")
                        getBot():stopScript()
                    end
                end
                getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
                sleep(cooldown)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

setting.takepickaxe = function()
    ::BACK::
    world = setting.split(worldpickaxe[index],"[^:]+")[1]
    door = setting.split(worldpickaxe[index],"[^:]+")[2]
    setting.warp(world,door,delaywarp)
    if not subserver then
        if not nuked then
            if not wrong then
                if findItem(98) == 0 then
                    for _, obj in pairs(getBot():getWorld():getObjects()) do
                        if obj.id == 98 then
                            findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                            sleep(1000)
                            getBot():collect(2)
                            sleep(1000)
                            setting.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                        end
                        if findItem(98) > 0  then
                            break
                        end
                    end
                    move(1,0)
                    sleep(1000)
                    getBot():setDirection(true)
                    getBot():wear(98)
                    sleep(1000)
                    getBot():drop(98,findItem(98) - 1)
                    sleep(1000)
                end
            else
                wrong = false
                sleep(5000)
                print("["..indexbot.."]Id door world take support items is wrong, check ur id door !!")
                setting.botinfo("Id door world take support items is wrong, check ur id door !, terminated script @everyone")
                getBot():stopScript()
            end
        else
            nuked = false
            sleep(5000)
            print("["..indexbot.."]World take support items is nuked, check ur world !!")
            setting.botinfo("World take support items is nuked, check ur world !, terminated script @everyone")
            getBot():stopScript()
        end
    else
        subserver = false
        sleep(5000)
        print("["..indexbot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
        setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
        sleep(120000)
        goto BACK
    end
end

setting.support = function()
    print("["..indexbot.."]Take support items")
    ::BACK::
    world = setting.split(worlditemtowear[index],"[^:]+")[1]
    door = setting.split(worlditemtowear[index],"[^:]+")[2]
    setting.warp(world,door,delaywarp)
    setting.webhookinfo()
    setting.wordsrandom()
    if not subserver then
        if not nuked then
            if not wrong then
                if findItem(iditemtowear) == 0 and setting.itemFloat(iditemtowear) >= itemkeep then
                    for _, obj in pairs(getBot():getWorld():getObjects()) do
                        if obj.id == iditemtowear then
                            findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                            sleep(1000)
                            getBot():collect(2)
                            sleep(1000)
                            getBot():setDirection(false)
                            if findItem(iditemtowear) > 0  then
                                break
                            end
                        end
                    end
                    getBot():wear(iditemtowear)
                    sleep(500)
                    getBot():setDirection(true)
                    getBot():drop(iditemtowear,findItem(iditemtowear) - itemkeep)
                    sleep(500)
                    print("["..indexbot.."][ "..getBot().name.." ] Success take and wear the support items!")
                    setting.botinfo("[ "..getBot().name.." ] Success take and wear the support items!")
                else
                    print("["..indexbot.."]Support item is empty, Drop the support item right now!")
                    setting.botinfo("Support item is empty, Drop the support item right now! @everyone")
                end
            else
                wrong = false
                sleep(5000)
                print("["..indexbot.."]Id door world take support items is wrong, check ur id door!")
                setting.botinfo("Id door world take support items is wrong, check ur id door! @everyone")
                getBot():stopScript()
            end
        else
            nuked = false
            sleep(5000)
            print("["..indexbot.."]World take support items is nuked, check ur world!")
            setting.botinfo("World take support items is nuked, check ur world! @everyone")
            getBot():stopScript()
        end
    else
        subserver = false
        sleep(5000)
        print("["..indexbot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
        setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
        sleep(120000)
        goto BACK
    end
end

setting.storingevents = function(threads)
    print("["..indexbot.."]Dropping events")
    for i = setting.event , #worldevent do
        ::Here::
        world = worldevent[i]
        setting.warp(world,doorworldevent,delaywarp)
        setting.webhookinfo()
        if not subserver then
            if not nuked then
                if not wrong then
                    if setting.itemFloat(eventList[1]) >= limitevent then
                        infoevent[world] = ""..setting.itemFloat(eventList[1]).."x (LIMIT)"
                        setting.botinfo("Events storage : [ "..world.." ] has reached limit, skipped world @everyone")
                        print("["..indexbot.."]Events storage : [ "..world.." ] has reached limit, skipped world")
                        setting.event = setting.event + 1
                        if setting.event > #worldevent then
                            infoevent[world] = ""..setting.itemFloat(eventList[1]).."x (LIMIT)"
                            setting.botinfo("All events storage has reached limit, Removing bot : [ "..getBot().name.." ] @everyone")
                            print("["..indexbot.."]All events storage has reached limit, Removing bot : [ "..getBot().name.." ]")
                            setting.webhookinfo()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            getBot():stopScript()
                        end
                        tileEvent = 0
                    else
                        for y,pack in pairs(eventList) do
                            for i,tile in pairs(getBot():getWorld():getTiles()) do
                                if separated then
                                    if tile.fg == 0 or tile.bg == 0 then
                                        ::BACK::
                                        findPath(eventX + (tileEvent),eventY - (y - 1))
                                        sleep(1000)
                                        local count = 0
                                        setting.reconnect(world,doorworldevent,eventX + (tileEvent),eventY - (y - 1))
                                        if eventX + (tileEvent) >= 98 then
                                            eventY = eventY - 1
                                            tileEvent = 0
                                        end
                                        getBot():setDirection(false)
                                        while findItem(pack) > 0 do
                                            getBot():drop(pack,200)
                                            sleep(delaydrop)
                                            setting.reconnect(world,doorworldevent,eventX + (tileEvent),eventY - (y - 1))
                                            count = count + 1
                                            if count >= 2 then
                                                tileEvent = tileEvent + 1
                                                goto BACK
                                            end
                                        end
                                    end
                                    if findItem(pack) == 0 then
                                        break
                                    end
                                else
                                    if tile.fg == 0 or tile.bg == 0 then
                                        ::BACK::
                                        findPath(eventX + (tileEvent),eventY)
                                        sleep(1000)
                                        local count = 0
                                        setting.reconnect(world,doorworldevent,eventX + (tileEvent),eventY)
                                        if eventX + (tileEvent) >= 98 then
                                            eventY = eventY - 1
                                            tileEvent = 0
                                        end
                                        getBot():setDirection(false)
                                        while findItem(pack) > 0 do
                                            getBot():drop(pack,200)
                                            sleep(delaydrop)
                                            setting.reconnect(world,doorworldevent,eventX + (tileEvent),eventY)
                                            count = count + 1
                                            if count >= 2 then
                                                tileEvent = tileEvent + 1
                                                goto BACK
                                            end
                                        end
                                    end
                                    if findItem(pack) == 0 then
                                        break
                                    end
                                end
                            end
                        end
                        sleep(100)
                        break
                    end
                else
                    infoevent[world] = "WRONG DOOR"
                    wrong = false
                    sleep(5000)
                    print("["..indexbot.."][ "..world.." ] Id door events storage is wrong, check ur id door!")
                    setting.botinfo("[ "..world.." ] Id door events storage is wrong, check ur id door! @everyone")
                    setting.event = setting.event + 1
                    if setting.event > #worldevent then
                        print("["..indexbot.."]All events storage has reached limit")
                        setting.botinfo("All events storage has reached limit! Removing bot : [ "..getBot().name.." ] @everyone")
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    tileEvent = 0
                end
            else
                infoevent[world] = "NUKED"
                nuked = false
                sleep(5000)
                print("["..indexbot.."][ "..world.." ] event Storage is NUKED, check ur storage!")
                setting.botinfo("[ "..world.." ] event Storage is NUKED, check ur storage! @everyone")
                setting.event = setting.event + 1
                if setting.event > #worldevent then
                    print("["..indexbot.."]All events storage has reached limit!")
                    setting.botinfo("All events storage has reached limit! Removing bot : [ "..getBot().name.." ] @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                tileEvent = 0
            end
        else
            subserver = false
            sleep(5000)
            print("["..indexbot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            goto Here
        end
    end
    infoevent[world] = "x"..setting.itemFloat(eventList[1]).."x"
    if clearhistory then
        setting.joinworld()
    end
end

setting.storingpacks = function()
    print("["..indexbot.."]Dropping packs")
    for i = setting.pack , #worldpack do
        ::Here::
        world = worldpack[i]
        setting.warp(world,doorworldpack,delaywarp)
        setting.webhookinfo()
        setting.wordsrandom()
        if not subserver then
            if not nuked then
                if not wrong then
                    if setting.itemFloat(packList[1]) >= limitpack then
                        infopack[world] = ""..setting.itemFloat(packList[1]).."x (LIMIT)"
                        setting.botinfo("Packs storage : [ "..world.." ] has reached limit, skipped world @everyone")
                        print("["..indexbot.."]Packs storage : [ "..world.." ] has reached limit, skipped world")
                        setting.pack = setting.pack + 1
                        if setting.pack > #worldpack then
                            infopack[world] = ""..setting.itemFloat(packList[1]).."x (LIMIT)"
                            setting.botinfo("All packs storage has reached limit, Removing bot : [ "..getBot().name.." ] @everyone")
                            print("["..indexbot.."]All packs storage has reached limit, Removing bot : [ "..getBot().name.." ]")
                            setting.webhookinfo()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            getBot():stopScript()
                        end
                        tilePack = 0
                    else
                        for y,pack in pairs(packList) do
                            for i,tile in pairs(getBot():getWorld():getTiles()) do
                                if separated then
                                    if tile.fg == 0 or tile.bg == 0 then
                                        ::BACK::
                                        findPath(packX + (tilePack),packY - (y-1))
                                        sleep(1000)
                                        local count = 0
                                        setting.reconnect(world,doorworldpack,packX + (tilePack),packY - (y-1))
                                        if packX + (tilePack) >= 98 then
                                            packY = packY - 1
                                            tilePack = 0
                                        end
                                        getBot():setDirection(false)
                                        while findItem(pack) > 0 do
                                            getBot():drop(pack,200)
                                            sleep(delaydrop)
                                            setting.reconnect(world,doorworldpack,packX + (tilePack),packY - (y-1))
                                            count = count + 1
                                            if count >= 2 then
                                                tilePack = tilePack + 1
                                                goto BACK
                                            end
                                        end
                                    end
                                    if findItem(pack) == 0 then
                                        break
                                    end
                                else
                                    if tile.fg == 0 or tile.bg == 0 then
                                        ::BACK::
                                        findPath(packX + (tilePack),packY)
                                        sleep(1000)
                                        local count = 0
                                        setting.reconnect(world,doorworldpack,packX + (tilePack),packY)
                                        if packX + (tilePack) >= 98 then
                                            packY = packY - 1
                                            tilePack = 0
                                        end
                                        getBot():setDirection(false)
                                        while findItem(pack) > 0 do
                                            getBot():drop(pack,200)
                                            sleep(delaydrop)
                                            setting.reconnect(world,doorworldpack,packX + (tilePack),packY)
                                            count = count + 1
                                            if count >= 2 then
                                                tilePack = tilePack + 1
                                                goto BACK
                                            end
                                        end
                                    end
                                    if findItem(pack) == 0 then
                                        break
                                    end
                                end
                            end
                        end
                        sleep(100)
                        break
                    end
                else
                    infopack[world] = "WRONG DOOR"
                    wrong = false
                    sleep(5000)
                    print("["..indexbot.."][ "..world.." ] Id door packs storage is wrong, check ur id door!")
                    setting.botinfo("[ "..world.." ] Id door packs storage is wrong, check ur id door! @everyone")
                    setting.pack = setting.pack + 1
                    if setting.pack > #worldpack then
                        print("["..indexbot.."]All packs storage has reached limit")
                        setting.botinfo("All packs storage has reached limit! Removing bot : [ "..getBot().name.." ] @everyone")
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    tilePack = 0
                end
            else
                infopack[world] = "NUKED"
                nuked = false
                sleep(5000)
                print("["..indexbot.."][ "..world.." ] packs Storage is NUKED, check ur storage!")
                setting.botinfo("[ "..world.." ] packs Storage is NUKED, check ur storage! @everyone")
                setting.pack = setting.pack + 1
                if setting.pack > #worldpack then
                    print("["..indexbot.."]All packs storage has reached limit!")
                    setting.botinfo("All packs storage has reached limit! Removing bot : [ "..getBot().name.." ] @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                tilePack = 0
            end
        else
            subserver = false
            sleep(5000)
            print("["..indexbot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            goto Here
        end
    end
    infopack[world] = ""..setting.itemFloat(packList[1]).."x"
    if clearhistory then
        setting.joinworld()
    end
end

setting.storingseeds = function(info,seedid)
    print("["..indexbot.."]Dropping seeds")
    for i = setting.seed , #worldseed do
        ::Here::
        world = worldseed[i]
        setting.warp(world,doorworldseed,delaywarp)
        setting.webhookinfo()
        setting.wordsrandom()
        if not subserver then
            if not nuked then
                if not wrong then
                    if setting.itemFloat(seed) >= limitseed then
                        infoseed[world] = ""..setting.itemFloat(seed).."x (LIMIT)"
                        setting.botinfo("Seeds storage : [ "..world.." ] has reached limit, skipped world @everyone")
                        print("["..indexbot.."]Seeds storage : [ "..world.." ] has reached limit, skipped world")
                        setting.seed = setting.seed + 1
                        if setting.seed > #worldseed then
                            infoseed[world] = ""..setting.itemFloat(seed).."x (LIMIT)"
                            setting.botinfo("All seeds storage has reached limit, Removing bot : [ "..getBot().name.." ] @everyone")
                            print("["..indexbot.."]All seeds storage has reached limit, Removing bot : [ "..getBot().name.." ] @everyone")
                            setting.webhookinfo()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            getBot():stopScript()
                        end
                        tileSeed = 0
                    else
                        for i,tile in pairs(getBot():getWorld():getTiles()) do
                            if tile.fg == 0 or tile.bg == 0 then
                                ::BACK::
                                findPath(seedX + (tileSeed),seedY)
                                sleep(1000)
                                local count = 0
                                setting.reconnect(world,doorworldseed,seedX + (tileSeed),seedY)
                                if seedX + (tileSeed) >= 98 then
                                    seedY = seedY - 1
                                    tileSeed = 0
                                end
                                getBot():setDirection(false)
                                while findItem(seedid) > 0 do
                                    getBot():drop(seedid,200)
                                    sleep(delaydrop)
                                    setting.reconnect(world,doorworldseed,seedX + (tileSeed),seedY)
                                    count = count + 1
                                    if count >= 2 then
                                        tileSeed = tileSeed + 1
                                        goto BACK
                                    end
                                end
                            end
                            if findItem(seedid) == 0 then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                else
                    infoseed[world] = "WRONG DOOR"
                    wrong = false
                    sleep(5000)
                    print("["..indexbot.."][ "..world.." ] Id door seeds storage is wrong, check ur id door!")
                    setting.botinfo("[ "..world.." ] Id door seeds storage is wrong, check ur id door! @everyone")
                    setting.seed = setting.seed + 1
                    if setting.seed > #worldseed then
                        print("["..indexbot.."]All seeds storage has reached limit")
                        setting.botinfo("All seeds storage has reached limit @everyone")
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    tileSeed = 0
                end
            else
                infoseed[world] = "NUKED"
                nuked = false
                sleep(5000)
                print("["..indexbot.."][ "..world.." ] seeds Storage is NUKED, check ur storage!")
                setting.botinfo("[ "..world.." ] seeds Storage is NUKED, check ur storage! @everyone")
                setting.seed = setting.seed + 1
                if setting.seed > #worldseed then
                    print("["..indexbot.."]All seeds storage has reached limit!")
                    setting.botinfo("All seeds storage has reached limit! @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                tileSeed = 0
            end
        else
            subserver = false
            sleep(5000)
            print("["..indexbot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            goto Here
        end
    end
    infoseed[world] = ""..setting.itemFloat(seedid).."x"
    if clearhistory then
        setting.joinworld()
    end
end

setting.setauth = function()
    if not indexbot and proxyServerDatabase then
        getProxyManager().custom_http_proxy = true
        getProxyManager().http_cooldown = delayDataBase
        if useDatabaseForMainProxy then
            getProxyManager().use_main_ip = true -- Use Main IP in Data Proxy Tab.
        end
        if setDatabaseType == "http" then
            addDataProxy(proxyDatabase, Proxy.http) 
        elseif setDatabaseType == "https" then
            addDataProxy(proxyDatabase, Proxy.https)
        elseif setDatabaseType == "socks" then
            addDataProxy(proxyDatabase, Proxy.socks5)
        end
    end
    if not indexbot and withproxy then
        getProxyManager():setLimit(botperproxy)
        for _, lists in pairs(proxyList) do
            getProxyManager():addProxy(lists)
        end
    end
end

setting.hookworld = function(var, netid)
    if var:get(0):getString() == "OnDialogRequest" then
        if var:get(1):getString():find("myWorldsUiTab") then
            getBot():warp(var:get(1):getString():match("add_button|(%w+)|"))
        end
    end
end

setting.backupacc = function()
    setting.botinfo("Bot : "..getBot().name.." reached max level, switching bot")
    ::BACK::
    for i = setting.backup, #backups do
        thread = setting.split(backups[i],"([^|]+)")[1]
        threading = setting.split(backups[i],"([^|]+)")[2]
        if typeaccount == "normal" then
            getBot():updateBot(thread,threading)
            sleep(delayloginbot)
        elseif typeaccount == "guest" then
            getBot():updateBot(""..setting.randomletter().."",thread,threading)
            sleep(delayloginbot)
        end
        getBot().auto_reconnect = false
        setting.botinfo("Succes switching bot to : "..getBot().name.."")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                setting.writeFile("NextBotStatus","["..getBot().name.."] status is Suspended")
                setting.backup = setting.backup + 1
                if setting.backup > #backups then
                    print("["..indexbot.."]No more bots to switch, sc terminated")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                goto BACK
            end
        end
        if getBot().status == BotStatus.online and getBot().level < switchOnLevel then
            break
        elseif getBot().status == BotStatus.online and getBot().level >= switchOnLevel then
            setting.backup = setting.backup + 1
            if setting.backup > #backups then
                print("["..indexbot.."]No more bots to switch, sc terminated")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            goto BACK
        end
    end
end

setting.main = function()
    if typeaccount == "guest" then
        for i,bot in pairs(botList) do
            local derr = {}
            for id in bot:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(""..setting.randomletter().."",x,y)
            sleep(delayloginbot)
        end
    elseif typeaccount == "normal" then
        for i,list in pairs(botList) do
            local derr = {}
            for id in list:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(x,y)
            sleep(delayloginbot)
        end
    end
    print("Please select all and re-execute script")
    return 0
end

setting.banning = function()
    if autoBanPeople then
        for _, player in pairs(getPlayers()) do
            if player.name ~= getBots()[indexbot].name and player.name ~= whitelist then
                getBots()[indexbot]:say("/ban " .. player.name)
            end
        end
    end
end

local network = math.random(3,50)
setting.rotate = function(info,static,blockid)
    print("["..indexbot.."]Pnb")
    ::BACK::
    if not pnbother then
        while not getBot():isInTile(98,network) do
            findPath(98,network)
            sleep(500)
        end
        if changeSkin then
            getBot():setSkin(math.random(1, 6))
            sleep(1000)
        end    
        setting.wordsrandom()
        botX = getBot().x
        botY = getBot().y
        if pnbtile == 1 then
            while findItem(blockid) >= pnbtile do
                if getTile(botX + 1,botY).bg ~= 0 or getTile(botX + 1, botY).fg ~= 0 then
                    punch(1,0)
                    sleep(delaypunch)
                    setting.reconnect(info,static,botX,botY)
                end
                if getTile(botX+ 1,botY).bg == 0 or getTile(botX+ 1, botY).fg == 0 then
                    place(blockid,1,0)
                    sleep(delayplace)
                    setting.reconnect(info,static,botX,botY)
                end
                getBot():collect(4) 
                sleep(delaycollect)
                setting.banning()
                if autoSwitch and getBot().level >= switchOnLevel then
                    if findItem(blockid) > 0 then
                        setting.storingblocks(info,blockid)
                    end
                    if findItem(blockid+1) > 0 then
                        setting.storingseeds(info,blockid+1)
                    end
                    setting.backupacc()
                    if takepickaxe then
                        while findItem(98) == 0 do
                            setting.takepickaxe()
                            sleep(6000)
                        end
                    end
                    if leveling and getBot().level < setminlvl then
                        setting.lepel()
                    end
                    setting.warp(info,static,delaywarp)
                    setting.webhookinfo()
                    goto BACK
                end
                if getBot().gem_count >= mingems and buypack then
                    setting.buying()
                    setting.storingpacks()
                    print("["..indexbot.."]Pnb")
                    setting.warp(info,static,delaywarp)
                    setting.webhookinfo()
                    goto BACK
                end
            end
        else
            while findItem(blockid) >= pnbtile do
                while setting.placeitem(botX,botY) do
                    for _,i in pairs(tilebreak) do
                        if getTile(botX + 1,botY + i).fg == 0 and getTile(botX + 1,botY + i).bg == 0 then
                            place(blockid,1,i)
                            sleep(delayplace)
                            setting.reconnect(info,static,botX,botY)
                        end
                    end
                end
                while setting.punchitem(botX,botY) do
                    for _,i in pairs(tilebreak) do
                        if getTile(botX + 1,botY + i).fg ~= 0 or getTile(botX + 1,botY + i).bg ~= 0 then
                            punch(1,i)
                            sleep(delaypunch)
                            setting.reconnect(info,static,botX,botY)
                        end
                    end
                end
                getBot():collect(6) 
                sleep(delaycollect)
                setting.banning()
                if autoSwitch and getBot().level >= switchOnLevel then
                    if findItem(blockid) > 0 then
                        setting.storingblocks(info,blockid)
                    end
                    if findItem(blockid+1) > 0 then
                        setting.storingseeds(info,blockid+1)
                    end
                    setting.backupacc()
                    if takepickaxe then
                        while findItem(98) == 0 do
                            setting.takepickaxe()
                            sleep(6000)
                        end
                    end
                    if leveling and getBot().level < setminlvl then
                        setting.lepel()
                    end
                    setting.warp(info,static,delaywarp)
                    setting.webhookinfo()
                    goto BACK
                end
                if getBot().gem_count >= mingems and buypack then
                    setting.buying()
                    setting.storingpacks()
                    print("["..indexbot.."]Pnb")
                    setting.warp(info,static,delaywarp)
                    setting.webhookinfo()
                    goto BACK
                end
            end
        end
    else
        setting.warp(find,"",delaywarp)
        setting.webhookinfo()
        if not subserver then
            if not nuked then
                while not getBot():isInTile(posX,posY) do
                    findPath(posX,posY)
                    sleep(500)
                    setting.reconnect(find,"",posX,posY)
                end
                if changeSkin then
                    getBot():setSkin(math.random(1, 6))
                    sleep(1000)
                end    
                setting.wordsrandom()
                botX = getBot().x
                botY = getBot().y
                if pnbtile == 1 then
                    while findItem(blockid) >= pnbtile do
                        if getTile(botX + 1,botY).bg ~= 0 or getTile(botX + 1, botY).fg ~= 0 then
                            punch(1,0)
                            sleep(delaypunch)
                            setting.reconnect(find,"",posX,posY)
                        end
                        if getTile(botX+ 1,botY).bg == 0 or getTile(botX+ 1, botY).fg == 0 then
                            place(blockid,1,0)
                            sleep(delayplace)
                            setting.reconnect(find,"",posX,posY)
                        end
                        getBot():collect(4) 
                        sleep(delaycollect)
                        setting.banning()
                        if autoSwitch and getBot().level >= switchOnLevel then
                            if findItem(blockid) > 0 then
                                setting.storingblocks(info,blockid)
                            end
                            if findItem(blockid+1) > 0 then
                                setting.storingseeds(info,blockid+1)
                            end
                            setting.backupacc()
                            if takepickaxe then
                                while findItem(98) == 0 do
                                    setting.takepickaxe()
                                    sleep(6000)
                                end
                            end
                            if leveling and getBot().level < setminlvl then
                                setting.lepel()
                            end
                            setting.warp(find,"",delaywarp)
                            setting.webhookinfo()
                            goto BACK
                        end
                        if getBot().gem_count >= mingems and buypack then
                            setting.buying()
                            setting.storingpacks()
                            print("["..indexbot.."]Pnb")
                            setting.warp(find,"",delaywarp)
                            setting.webhookinfo()
                            goto BACK
                        end
                    end
                else
                    while findItem(blockid) >= pnbtile do
                        while setting.placeitem(botX,botY) do
                            for _,i in pairs(tilebreak) do
                                if getTile(botX + 1,botY + i).fg == 0 and getTile(botX + 1,botY + i).bg == 0 then
                                    place(blockid,1,i)
                                    sleep(delayplace)
                                    setting.reconnect(find,"",posX,posY)
                                end
                            end
                        end
                        while setting.punchitem(botX,botY) do
                            for _,i in pairs(tilebreak) do
                                if getTile(botX + 1,botY + i).fg ~= 0 or getTile(botX + 1,botY + i).bg ~= 0 then
                                    punch(1,i)
                                    sleep(delaypunch)
                                    setting.reconnect(find,"",posX,posY)
                                end
                            end
                        end
                        getBot():collect(6) 
                        sleep(delaycollect)
                        setting.banning()
                        if autoSwitch and getBot().level >= switchOnLevel then
                            if findItem(blockid) > 0 then
                                setting.storingblocks(info,blockid)
                            end
                            if findItem(blockid+1) > 0 then
                                setting.storingseeds(info,blockid+1)
                            end
                            setting.backupacc()
                            if takepickaxe then
                                while findItem(98) == 0 do
                                    setting.takepickaxe()
                                    sleep(6000)
                                end
                            end
                            if leveling and getBot().level < setminlvl then
                                setting.lepel()
                            end
                            setting.warp(find,"",delaywarp)
                            setting.webhookinfo()
                            goto BACK
                        end
                        if getBot().gem_count >= mingems and buypack then
                            setting.buying()
                            setting.storingpacks()
                            print("["..indexbot.."]Pnb")
                            setting.warp(find,"",delaywarp)
                            setting.webhookinfo()
                            goto BACK
                        end
                    end
                end
            else
                nuked = false
                sleep(5000)
                print("World PNB is NUKED!, check ur world !!")
                setting.botinfo("World PNB is NUKED!, check ur world !! @everyone")
            end
        else
            subserver = false
            sleep(5000)
            print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            goto BACK
        end
    end
    setting.recycles()
    setting.webhookinfo()
end

setting.recycles = function()
    for i , list in ipairs(trashList) do
        if findItem(list) > amount then
            getBot():sendPacket(2,"action|trash\n|itemID|" .. list)
            sleep(1000)
            getBot():sendPacket(2,"action|dialog_return\ndialog_name|trash_item\nitemID|" .. list .. "|\ncount|" .. findItem(list))
            sleep(1000)
        end
    end
end

setting.rechecking = function(threads)
    print("["..indexbot.."]Rechecking")
    ::BACK::
    for _, tile in pairs(getBot():getWorld():getTiles()) do
        if tile.fg == seed and tile:canHarvest() then
            findPath(tile.x,tile.y)
            sleep(delayharvest)
            setting.reconnect(threads,doorfarm,tile.x,tile.y)
            if tile.fg == seed then
                punch(0,0)
                sleep(delayharvest)
                setting.reconnect(threads,doorfarm,tile.x,tile.y)
            end
            getBot():collect(range)
            sleep(30)
        end
        if findItem(iditemtowear) == 0 then
            if itemtowear then
                setting.support()
                print("["..indexbot.."]Rechecking")
                setting.warp(threads,doorfarm,delaywarp)
                setting.webhookinfo()
                goto BACK
            end
        end
        if findItem(block) > 180 then
            if pnbother then
                setting.rotate(threads,"",block)
                print("["..indexbot.."]Harvesting")
                setting.warp(threads,doorfarm,delaywarp)
                setting.webhookinfo()
            else
                setting.rotate(threads,doorfarm,block)
            end
            goto BACK
        end
        if findItem(eventList[1]) > amountevent then
            setting.storingevents(threads)
            print("["..indexbot.."]Rechecking")
            setting.warp(threads,doorfarm,delaywarp)
            setting.webhookinfo()
            goto BACK
        elseif findItem(seed) >= amountseed then
            if dontplant then
                setting.storingseeds(threads,seed)
                print("["..indexbot.."]Rechecking")
                setting.warp(threads,doorfarm,delaywarp)
                setting.webhookinfo()
            else
                setting.plant(threads,doorfarm,seed)
                if findItem(seed) >= amountseed then
                    setting.storingseeds(threads,seed)
                    print("["..indexbot.."]Harvesting")
                    setting.warp(threads,doorfarm,delaywarp)
                    setting.webhookinfo()
                end
            end
            goto BACK
        elseif getBot().gem_count >= mingems and buypack then
            setting.buying()
            setting.storingpacks()
            print("["..indexbot.."]Rechecking")
            setting.warp(threads,doorfarm,delaywarp)
            setting.webhookinfo()
            goto BACK
        end
    end
    for _, obj in pairs(getBot():getWorld():getObjects()) do
        if obj.id == block then
            if setting.itemFloat(block) ~= 0 then
                findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                sleep(30)
                if not ignoregems then
                    getBot():collect(1)
                end
                sleep(30)
                setting.reconnect(threads,doorfarm,math.floor(obj.x / 32),math.floor(obj.y / 32))
            end
            if findItem(block) > 180 then
                if pnbother then
                    setting.rotate(threads,"",block)
                    print("["..indexbot.."]Harvesting")
                    setting.warp(threads,doorfarm,delaywarp)
                    setting.webhookinfo()
                else
                    setting.rotate(threads,doorfarm,block)
                end
                goto BACK
            end
            if findItem(eventList[1]) > amountevent then
                setting.storingevents(threads)
                print("["..indexbot.."]Rechecking")
                setting.warp(threads,doorfarm,delaywarp)
                setting.webhookinfo()
                goto BACK
            elseif findItem(seed) >= amountseed then
                if dontplant then
                    setting.storingseeds(threads,seed)
                    print("["..indexbot.."]Rechecking")
                    setting.warp(threads,doorfarm,delaywarp)
                    setting.webhookinfo()
                else
                    setting.plant(threads,doorfarm,seed)
                    if findItem(seed) >= amountseed then
                        setting.storingseeds(threads,seed)
                        print("["..indexbot.."]Harvesting")
                        setting.warp(threads,doorfarm,delaywarp)
                        setting.webhookinfo()
                    end
                end
                goto BACK
            elseif getBot().gem_count >= mingems and buypack then
                setting.buying()
                setting.storingpacks()
                print("["..indexbot.."]Rechecking")
                setting.warp(threads,doorfarm,delaywarp)
                setting.webhookinfo()
                goto BACK
            end
        end
    end
    if not dontplant then
        for _, tile in pairs(getBot():getWorld():getTiles()) do
            if tile.fg == 0 and getTile(tile.x, tile.y).flags ~= 0 and findItem(seed) ~= 0 then
                findPath(tile.x,tile.y)
                if tile.fg ~= seed then
                    place(seed,0,0)
                    sleep(delayplant)
                    setting.reconnect(threads,doorfarm,tile.x,tile.y)
                end
            end
            if findItem(seed) == 0 then
                break
            end
        end
    end
end

setting.levelingcek = function(params)
    print("["..indexbot.."]Leveling")
    ::BACK::
    for _, obj in pairs(getBot():getWorld():getObjects()) do
        if obj.id == idblockleveling then
            if setting.itemFloat(idblockleveling) ~= 0 then
                findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                sleep(30)
                if not ignoregems then
                    getBot():collect(1)
                end
                sleep(30)
                setting.reconnect(params,doorworldleveling,math.floor(obj.x / 32),math.floor(obj.y / 32))
            end
            if findItem(idblockleveling) > 180 then
                if getBot().level >= setminlvl then
                    if pnbother then
                        setting.rotate(params,"",idblockleveling)
                        print("["..indexbot.."]Leveling")
                        setting.warp(params,doorworldleveling,delaywarp)
                        setting.webhookinfo()
                    else
                        setting.rotate(params,doorworldleveling,idblockleveling)
                    end
                    goto BACK
                end
            end
            if findItem(eventList[1]) > amountevent then
                setting.storingevents(params)
                print("["..indexbot.."]Leveling")
                setting.warp(params,doorworldleveling,delaywarp)
                setting.webhookinfo()
                goto BACK
            elseif findItem(idblockleveling+1) >= amountseed then
                setting.plant(params,doorworldleveling,idblockleveling+1)
                if findItem(idblockleveling+1) >= amountseed then
                    setting.storingseeds(params,idblockleveling+1)
                    print("["..indexbot.."]Leveling")
                    setting.warp(params,doorworldleveling,delaywarp)
                    setting.webhookinfo()
                end
                goto BACK
            elseif getBot().gem_count >= mingems and buypack then
                setting.buying()
                setting.storingpacks()
                print("["..indexbot.."]Leveling")
                setting.warp(params,doorworldleveling,delaywarp)
                setting.webhookinfo()
                goto BACK
            end
        end
    end
    for _, tile in pairs(getBot():getWorld():getTiles()) do
        if tile.fg == 0 and getTile(tile.x, tile.y).flags ~= 0 then
            findPath(tile.x,tile.y)
            sleep(delayplant)
            setting.reconnect(params,doorworldleveling,tile.x,tile.y)
            if tile.fg ~= idblockleveling+1 then
                place(idblockleveling+1,0,0)
                sleep(delayplant)
                setting.reconnect(params,doorworldleveling,tile.x,tile.y)
            end
        end
        if findItem(idblockleveling+1) == 0 then
            break
        end
    end
    if findItem(idblockleveling+1) >= amountseed then
        setting.storingseeds(params,idblockleveling+1)
        print("["..indexbot.."]Leveling")
        setting.warp(params,doorworldleveling,delaywarp)
        setting.webhookinfo()
        goto BACK
    end
end

setting.harvest = function(threads)
    tileA = 99
    tileB = 0
    tileC = -1
    tileD = 0
    print("["..indexbot.."]Harvesting")
    ::BACK::
    for y = -1, 53 do
        for x = tileA, tileB, tileC do
            if getTile(x,y).fg == seed and getTile(x,y):canHarvest() then
                if findItem(block) > 180 then
                    if pnbother then
                        setting.rotate(threads,"",block)
                        print("["..indexbot.."]Harvesting")
                        setting.warp(threads,doorfarm,delaywarp)
                        setting.webhookinfo()
                    else
                        setting.rotate(threads,doorfarm,block)
                    end
                    goto BACK
                end
                if findItem(iditemtowear) == 0 then
                    if itemtowear then
                        setting.support()
                        print("["..indexbot.."]Harvesting")
                        setting.warp(threads,doorfarm,delaywarp)
                        setting.webhookinfo()
                        goto BACK
                    end
                end
                if findItem(eventList[1]) > amountevent then
                    setting.storingevents(threads)
                    print("["..indexbot.."]Harvesting")
                    setting.warp(threads,doorfarm,delaywarp)
                    setting.webhookinfo()
                    goto BACK
                elseif findItem(seed) > amountseed then
                    if dontplant then
                        setting.storingseeds(threads,seed)
                        print("["..indexbot.."]Harvesting")
                        setting.warp(threads,doorfarm,delaywarp)
                        setting.webhookinfo()
                        goto BACK
                    else
                        setting.plant(threads,doorfarm,seed)
                        if findItem(seed) >= amountseed then
                            setting.storingseeds(threads,seed)
                            print("["..indexbot.."]Harvesting")
                            setting.warp(threads,doorfarm,delaywarp)
                            setting.webhookinfo()
                        end
                        goto BACK
                    end
                elseif getBot().gem_count >= mingems and buypack then
                    setting.buying()
                    setting.storingpacks()
                    print("["..indexbot.."]Harvesting")
                    setting.warp(threads,doorfarm,delaywarp)
                    setting.webhookinfo()
                    goto BACK
                end
                findPath(x,y)
                sleep(delayharvest)
                setting.reconnect(threads,doorfarm,x,y)
                if getTile(getBot().x,getBot().y).fg == seed then
                    punch(0,0)
                    sleep(delayharvest)
                    setting.reconnect(threads,doorfarm,x,y)
                end
                if root then
                    while getTile(getBot().x,getBot().y-1).fg == (block + 4) and getTile(x,y).flags ~= 0 do
                        punch(0, 1)
                        sleep(delayharvest)
                        setting.reconnect(threads,doorfarm,x,y)
                    end
                end
                getBot():collect(range)
                sleep(30)
            end
        end
        if tileD == 1 then
            if tileA == 0 then
                tileA = 99
                tileB = 0
                tileC = -1
                tileD = 0
            elseif tileA == 99 then
                tileA = 0
                tileB = 99
                tileC = 1
                tileD = 0
            end
        elseif tileD == 0 then
            tileD = tileD + 1
        end
    end
end

setting.levelings = function(params)
    tileA = 99
    tileB = 0
    tileC = -1
    tileD = 0
    print("["..indexbot.."]Levelings")
    ::BACK::
    for y = -1, 53 do
        for x = tileA, tileB, tileC do
            if getTile(x,y).fg == idblockleveling+1 and getTile(x,y):canHarvest() then
                if getBot().level >= setmaxlvl then
                    break
                end
                if findItem(idblockleveling) > 180 then
                    if getBot().level >= setminlvl then
                        if pnbother then
                            setting.rotate(params,"",idblockleveling)
                            print("["..indexbot.."]Levelings")
                            setting.warp(params,doorworldleveling,delaywarp)
                            setting.webhookinfo()
                        else
                            setting.rotate(params,doorworldleveling,idblockleveling)
                        end
                        goto BACK
                    else
                        getBot():sendPacket(2,"action|trash\n|itemID|" .. idblockleveling)
                        sleep(1000)
                        getBot():sendPacket(2,"action|dialog_return\ndialog_name|trash_item\nitemID|" .. idblockleveling .. "|\ncount|" .. findItem(idblockleveling))
                        sleep(1000)
                        goto BACK
                    end
                end
                if findItem(idblockleveling+1) > amountseed then
                    setting.plant(params,doorworldleveling,idblockleveling+1)
                    if findItem(idblockleveling+1) >= amountseed then
                        setting.storingseeds(params,idblockleveling+1)
                        print("["..indexbot.."]Levelings")
                        setting.warp(params,doorworldleveling,delaywarp)
                        setting.webhookinfo()
                    end
                    goto BACK
                elseif getBot().gem_count >= mingems and buypack then
                    setting.buying()
                    setting.storingpacks()
                    print("["..indexbot.."]Levelings")
                    setting.warp(params,doorworldleveling,delaywarp)
                    setting.webhookinfo()
                    goto BACK
                end
                findPath(x,y)
                sleep(delayharvest)
                setting.reconnect(params,doorworldleveling,x,y)
                if getTile(getBot().x,getBot().y).fg == idblockleveling+1 then
                    punch(0,0)
                    sleep(delayharvest)
                    setting.reconnect(params,doorworldleveling,x,y)
                end
                if getBot().level >= setminlvl then
                    getBot():collect(range)
                end
                sleep(30)
            end
        end
        if tileD == 1 then
            if tileA == 0 then
                tileA = 99
                tileB = 0
                tileC = -1
                tileD = 0
            elseif tileA == 99 then
                tileA = 0
                tileB = 99
                tileC = 1
                tileD = 0
            end
        elseif tileD == 0 then
            tileD = tileD + 1
        end
    end
end

setting.plant = function(info,static,seedid)
    tileA = 99
    tileB = 0
    tileC = -1
    tileD = 0
    print("["..indexbot.."]Planting")
    for y = -1, 53 do
        for x = tileA, tileB, tileC do
            if getTile(x,y).fg == 0 and getTile(x,y).flags ~= 0 then
                if findItem(seedid) == 0 then
                    break
                end
                findPath(x,y)
                sleep(delayplant)
                setting.reconnect(info,static,x,y)
                if getTile(getBot().x,getBot().y).fg ~= seedid then
                    place(seedid,0,0)
                    sleep(delayplant)
                    setting.reconnect(info,static,x,y)
                end
            end
        end
        if tileD == 1 then
            if tileA == 0 then
                tileA = 99
                tileB = 0
                tileC = -1
                tileD = 0
            elseif tileA == 99 then
                tileA = 0
                tileB = 99
                tileC = 1
                tileD = 0
            end
        elseif tileD == 0 then
            tileD = tileD + 1
        end
    end
end

setting.breakjammers = function()
    for _, idx in pairs(sjam) do
        print("["..indexbot.."]Take back jammer")
        setting.warp(idx,"",delaywarp)
        if not subserver then
            if not nuked then
                while getTile(getBot().x,getBot().y).fg == 6 do
                    move(1,0)
                    sleep(500)
                end
                setting.reconnect(idx,"")
                if pnbothermode == "sj" then
                    while getTile(getBot().x,getBot().y - 1).fg == 226 do
                        punch(0,-1)
                        sleep(delaypunch)
                        setting.reconnect(idx,"",getBot().x,getBot().y)
                    end
                elseif pnbothermode == "wl" then
                    while getTile(getBot().x - 1,getBot().y - 1).fg == 242 do
                        punch(-1,-1)
                        sleep(delaypunch)
                        setting.reconnect(idx,"",getBot().x,getBot().y)
                    end
                elseif pnbothermode == "wl_sj" then
                    while getTile(getBot().x,getBot().y - 1).fg == 226 do
                        punch(0,-1)
                        sleep(delaypunch)
                        setting.reconnect(idx,"",getBot().x,getBot().y)
                    end
                    while getTile(getBot().x - 1,getBot().y - 1).fg == 242 do
                        punch(-1,-1)
                        sleep(delaypunch)
                        setting.reconnect(idx,"",getBot().x,getBot().y)
                    end
                end
            else
                nuked = false
                sleep(5000)
                print("World take back jammer has nuked!!")
                setting.botinfo("World take back jammer has nuked!! SC Terminated @everyone")
            end
        else
            subserver = false
            sleep(5000)
            print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
        end
    end
end

setting.takejammer = function(threads)
    ::BACK::
    print("["..indexbot.."]Take jammers")
    world = setting.split(worldjammer[index],"[^:]+")[1]
    door = setting.split(worldjammer[index],"[^:]+")[2]
    setting.warp(world,door,delaywarp)
    setting.webhookinfo()
    if not subserver then
        if not nuked then
            if not wrong then
                if pnbothermode == "sj" then
                    for _, obj in pairs(getBot():getWorld():getObjects()) do
                        if obj.id == 226 then
                            findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                            sleep(1000)
                            getBot():collect(2)
                            sleep(1000)
                            setting.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                        end
                        if findItem(226) > 1 then
                            break
                        end
                    end
                    move(1,0)
                    sleep(1000)
                    getBot():setDirection(true)
                    getBot():drop(226,findItem(226) - 1)
                    sleep(2000)
                elseif pnbothermode == "wl" then
                    for _, obj in pairs(getBot():getWorld():getObjects()) do
                        if obj.id == 242 then
                            findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                            sleep(1000)
                            getBot():collect(2)
                            sleep(1000)
                            setting.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                        end
                        if findItem(242) > 1 then
                            break
                        end
                    end
                    move(1,0)
                    sleep(1000)
                    getBot():setDirection(true)
                    getBot():drop(242,findItem(242) - 1)
                    sleep(2000)
                elseif pnbothermode == "wl_sj" then
                    for _, obj in pairs(getBot():getWorld():getObjects()) do
                        if obj.id == 242 then
                            findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                            sleep(1000)
                            getBot():collect(2)
                            sleep(1000)
                            setting.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                        end
                        if findItem(242) > 1 then
                            break
                        end
                    end
                    move(1,0)
                    sleep(1000)
                    getBot():setDirection(true)
                    getBot():drop(242,findItem(242) - 1)
                    sleep(2000)
                    for _, obj in pairs(getBot():getWorld():getObjects()) do
                        if obj.id == 226 then
                            findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                            sleep(1000)
                            getBot():collect(2)
                            sleep(1000)
                            setting.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                        end
                        if findItem(226) > 1 then
                            break
                        end
                    end
                    move(1,0)
                    sleep(1000)
                    getBot():setDirection(true)
                    getBot():drop(226,findItem(226) - 1)
                    sleep(2000)
                end
            else
                wrong = false
                sleep(5000)
                setting.botinfo("World to take jammers is wrong door id, terminated sc @everyone")
                print("World to take jammers is wrong door id, terminated sc")
                error()
            end
        else
            nuked = false
            sleep(5000)
            setting.botinfo("World to take jammers is NUKED, terminated sc @everyone")
            print("World to take jammers is NUKED, terminated sc")
            error()
        end
    else
        subserver = false
        sleep(5000)
        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
        setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
        sleep(120000)
        goto BACK
    end
end

setting.placeall = function()
    if pnbothermode == "sj" then
        while getTile(getBot().x,getBot().y - 1).fg ~= 226 do
            place(226,0,-1)
            sleep(delayplace)
            setting.reconnect(find,"")
        end
        sleep(1000)
        if getTile(getBot().x,getBot().y - 1).fg == 226 then
            punch(0,-1)
            sleep(delayplace)
            setting.reconnect(find,"")
        end
        if findItem(226) > 0 and getTile(getBot().x,getBot().y - 1).fg == 226 then
            setting.storingjammer()
        end
    elseif pnbothermode == "wl" then
        while getTile(getBot().x - 1,getBot().y - 1).fg ~= 242 do
            place(242,-1,-1)
            sleep(delayplace)
            setting.reconnect(find,"")
        end
        sleep(1000)
        if findItem(242) > 0 and getTile(getBot().x-1,getBot().y - 1).fg == 242 then
            setting.storingjammer()
        end
    elseif pnbothermode == "wl_sj" then
        while getTile(getBot().x - 1,getBot().y - 1).fg ~= 242 do
            place(242,-1,-1)
            sleep(delayplace)
            setting.reconnect(find,"")
        end
        sleep(500)
        while getTile(getBot().x,getBot().y - 1).fg ~= 226 do
            place(226,0,-1)
            sleep(delayplace)
            setting.reconnect(find,"")
        end
        sleep(1000)
        if getTile(getBot().x,getBot().y - 1).fg == 226 then
            punch(0,-1)
            sleep(delayplace)
            setting.reconnect(find,"")
        end
        if findItem(242) > 0 and findItem(226) > 0 and getTile(getBot().x-1,getBot().y - 1).fg == 242 and getTile(getBot().x,getBot().y - 1).fg == 226 then
            setting.storingjammer()
        end
    end
end

setting.storingjammer = function()
    ::BACK::
    print("["..indexbot.."]Storing jammer")
    world = setting.split(worldjammer[index],"[^:]+")[1]
    door = setting.split(worldjammer[index],"[^:]+")[2]
    setting.warp(world,door,delaywarp)
    setting.webhookinfo()
    if not subserver then
        if not nuked then
            if not wrong then
                if pnbothermode == "sj" then
                    for i,tile in pairs(getBot():getWorld():getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::DROPS::
                            findPath(jammerX + (tileJammer),jammerY)
                            sleep(1000)
                            local count = 0
                            setting.reconnect(world,door,jammerX + (tileJammer),jammerY)
                            if jammerX + (tileJammer) >= 98 then
                                jammerY = jammerY - 1
                                tileJammer = 0
                            end
                            while findItem(226) > 0 do
                                getBot():drop(226,200)
                                sleep(delaydrop)
                                setting.reconnect(world,door,jammerX + (tileJammer),jammerY)
                                count = count + 1
                                if count >= 2 then
                                    tileJammer = tileJammer + 1
                                    goto DROPS
                                end
                            end
                        end
                        if findItem(226) == 0 then
                            break
                        end
                    end
                elseif pnbothermode == "wl" then
                    for i,tile in pairs(getBot():getWorld():getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::DROPS::
                            findPath(jammerX + (tileJammer),jammerY)
                            sleep(1000)
                            local count = 0
                            setting.reconnect(world,door,jammerX + (tileJammer),jammerY)
                            if jammerX + (tileJammer) >= 98 then
                                jammerY = jammerY - 1
                                tileJammer = 0
                            end
                            while findItem(242) > 0 do
                                getBot():drop(242,200)
                                sleep(delaydrop)
                                setting.reconnect(world,door,jammerX + (tileJammer),jammerY)
                                count = count + 1
                                if count >= 2 then
                                    tileJammer = tileJammer + 1
                                    goto DROPS
                                end
                            end
                        end
                        if findItem(242) == 0 then
                            break
                        end
                    end
                elseif pnbothermode == "wl_sj" then
                    for i,tile in pairs(getBot():getWorld():getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::DROPS::
                            findPath(jammerX + (tileJammer),jammerY)
                            sleep(1000)
                            local count = 0
                            setting.reconnect(world,door,jammerX + (tileJammer),jammerY)
                            if jammerX + (tileJammer) >= 98 then
                                jammerY = jammerY - 1
                                tileJammer = 0
                            end
                            while findItem(226) > 0 do
                                getBot():drop(226,200)
                                sleep(delaydrop)
                                setting.reconnect(world,door,jammerX + (tileJammer),jammerY)
                                count = count + 1
                                if count >= 2 then
                                    tileJammer = tileJammer + 1
                                    goto DROPS
                                end
                            end
                            while findItem(242) > 0 do
                                getBot():drop(242,200)
                                sleep(delaydrop)
                                setting.reconnect(world,door,jammerX + (tileJammer),jammerY)
                                count = count + 1
                                if count >= 2 then
                                    tileJammer = tileJammer + 1
                                    goto DROPS
                                end
                            end
                        end
                        if findItem(226) == 0 and findItem(242) == 0 then
                            break
                        end
                    end
                end
            else
                wrong = false
                sleep(5000)
                setting.botinfo("World to storing jammers is wrong door id, terminated sc @everyone")
                print("World to storing jammers is wrong door id, terminated sc")
                error()
            end
        else
            nuked = false
            sleep(5000)
            setting.botinfo("World to storing jammers is NUKED, terminated sc @everyone")
            print("World to storing jammers is NUKED, terminated sc")
            error()
        end
    else
        subserver = false
        sleep(5000)
        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
        setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
        sleep(120000)
        goto BACK
    end
end

setting.lepel = function()
    for idx, annount in pairs(lvling) do
        ::BACKK::
        setting.warp(annount,doorworldleveling,delaywarp)
        setting.wordsrandom()
        setting.webhookinfo()
        if not subserver then
            if not nuked then
                if not wrong then
                    setting.levelings(annount)
                    setting.levelingcek(annount)
                    if getBot().level >= setmaxlvl then
                        break
                    end
                else
                    wrong = false
                    sleep(5000)
                    print(""..annount.." is wrong door id, skipped world")
                    setting.botinfo("[ "..annount.." ] is wrong door id, skipped world @everyone")
                end
            else
                nuked = false
                sleep(5000)
                print(""..value.." is NUKED!, check ur world !!")
                setting.botinfo("[ "..annount.." ] is NUKED!, check ur world !! @everyone")
            end
        else
            subserver = false
            sleep(5000)
            print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            goto BACKK
        end
    end
end

setting.htree = function(tree,amount)
    local attempt = 0
    local param = getBot():getWorld().name
    for _,tile in pairs(getBot():getWorld():getTiles()) do
        if tile.fg == tree then
            getBot():findPath(tile.x,tile.y)
            sleep(30)
            setting.reconnect(param,"",tile.x,tile.y)
            while getBot():getWorld():getTile(tile.x,tile.y).fg ~= 0 do
                getBot():hit(tile.x,tile.y)
                sleep(200)
                setting.reconnect(param,"",tile.x,tile.y)
            end
            attempt = attempt + 1
        end
        if attempt >= amount then
            break
        end
    end
end

setting.placedirt = function()
    local param = getBot():getWorld().name
    for tilex = 35, 50 do
        getBot():findPath(tilex,17)
        sleep(30)
        setting.reconnect(param,"",tilex,17)
        while getBot():getWorld():getTile(tilex,18).fg == 0 do
            getBot():place(tilex,18,2)
            sleep(200)
            setting.reconnect(param,"",tilex,17)
        end
    end
end

setting.dirts = function(amount)
    local attempt = 0
    local param = getBot():getWorld().name
    for tiley = 19, 53, 1 do
        for tilex = 0, 6, 1 do
            if getBot():getWorld():getTile(tilex,tiley).fg == 2 then
                getBot():findPath(tilex,tiley - 1)
                sleep(30)
                setting.reconnect(param,"",tilex,tiley - 1)
                while getBot():getWorld():getTile(tilex,tiley).fg ~= 0 do
                    getBot():hit(tilex,tiley)
                    sleep(200)
                    setting.reconnect(param,"",tilex,tiley - 1)
                end
                attempt = attempt + 1
            end
            if attempt >= amount then
                break
            end
        end
        if attempt >= amount then
            break
        end
    end
end

setting.findDirt = function(amount)
    local param = getBot():getWorld().name
    for tiley = 19, 53, 1 do
        for tilex = 0, 6, 1 do
            if getBot():getWorld():getTile(tilex,tiley).fg ~= 0 then
                getBot():findPath(tilex,tiley - 1)
                sleep(30)
                setting.reconnect(param,"",tilex,tiley - 1)
                while getBot():getWorld():getTile(tilex,tiley).fg ~= 0 do
                    getBot():hit(tilex,tiley)
                    sleep(200)
                    setting.reconnect(param,"",tilex,tiley - 1)
                end
            end
            if getBot():getInventory():getItemCount(3) >= amount then
                break
            end
        end
        if getBot():getInventory():getItemCount(3) >= amount then
            break
        end
    end
end

setting.placeWood = function()
    local param = getBot():getWorld().name
    for tilex = 35, 56 do
        getBot():findPath(tilex,14)
        sleep(30)
        setting.reconnect(param,"",tilex,14)
        while getBot():getWorld():getTile(tilex,15).fg == 0 do
            getBot():place(tilex,15,100)
            sleep(200)
            setting.reconnect(param,"",tilex,14)
        end
    end
end

setting.breakWood = function()
    local param = getBot():getWorld().name
    for tilex = 35, 56 do
        getBot():findPath(tilex,14)
        sleep(30)
        setting.reconnect(param,"",tilex,14)
        while getBot():getWorld():getTile(tilex,15).fg ~= 0 do
            getBot():hit(tilex,15)
            sleep(200)
            setting.reconnect(param,"",tilex,14)
        end
        if getBot():getInventory():getItemCount(101) > 4 then
            break
        end
    end
end

setting.planting = function(tree,amount)
    local param = getBot():getWorld().name
    local attempt = 0
    for tilex = 35, 50 do
        if getBot():getWorld():getTile(tilex,17).fg == 0 then
            getBot():findPath(tilex,17)
            sleep(30)
            setting.reconnect(param,"",tilex,17)
            while getBot():getWorld():getTile(tilex,17).fg == 0 do
                getBot():place(tilex,17,tree)
                sleep(200)
                setting.reconnect(param,"",tilex,17)
            end
            attempt = attempt + 1
        end
        if attempt >= amount then
            break
        end
    end
end

setting.ttree = function(tree)
    local attempt = 0
    local param = getBot():getWorld().name
    for tilex = 35, 50 do
        if getBot():getWorld():getTile(tilex,17).fg ~= 0 then
            getBot():findPath(tilex,17)
            sleep(30)
            setting.reconnect(param,"",tilex,17)
            while getBot():getWorld():getTile(tilex,17).fg ~= 0 do
                getBot():hit(tilex,17)
                sleep(200)
                setting.reconnect(param,"",tilex,17)
            end
            attempt = attempt + 1
        end
        if attempt >= 10 then
            break
        end
    end
end

setting.splice = function(item1,item2,amount)
    local attempt = 0
    local param = getBot():getWorld().name
    for tilex = 35, 45 do
        if getBot():getWorld():getTile(tilex,17).fg == 0 then
            getBot():findPath(tilex,17)
            sleep(30)
            setting.reconnect(param,"",tilex,17)
            while getBot():getWorld():getTile(tilex,17).fg == 0 do
                getBot():place(tilex,17,item1)
                sleep(200)
                setting.reconnect(param,"",tilex,17)
            end
            while getBot():getWorld():getTile(tilex,17).fg == item1 do
                getBot():place(tilex,17,item2)
                sleep(200)
                setting.reconnect(param,"",tilex,17)
            end
            attempt = attempt + 1
        end
        if attempt >= amount then
            break
        end
    end
end

setting.breakBlock = function(id,target)
    local param = getBot():getWorld().name
    while getBot():getInventory():getItemCount(id+1) < target do
        while getBot():getWorld():getTile(getBot().x,getBot().y-1).fg == 0 do
            getBot():place(getBot().x,getBot().y-1,id)
            sleep(210)
            setting.reconnect(param,"",getBot().x,getBot().y)
        end
        while getBot():getWorld():getTile(getBot().x,getBot().y-1).fg ~= 0 do
            getBot():hit(getBot().x,getBot().y-1)
            sleep(210)
            setting.reconnect(param,"",getBot().x,getBot().y)
        end
        sleep(500)
    end
end

setting.algorithm = function()
    getBot().collect_range = 3
    getBot().collect_interval = 200
    getBot().object_collect_delay = 110
    getBot().auto_collect = true
    setting.webhookinfo()
    for _, tile in pairs(getBot():getWorld():getTiles()) do
        if tile.fg == 11 and tile:canHarvest() then
            setting.htree(3,5)
            sleep(200)
            setting.placedirt()
            sleep(200)
            setting.dirts(20)
            sleep(200)
            setting.findDirt(11)
            setting.planting(3,10)
            sleep(31000)
            setting.ttree(3)
            sleep(200)
            setting.htree(11,10)
            sleep(200)
            for i = 1,5 do
                getBot():drop(11,200)
                sleep(2000)
            end
            sleep(200)
            setting.htree(5,9)
            sleep(200)
            setting.breakBlock(4,10)
            sleep(200)
            setting.findDirt(12)
            sleep(200)
            setting.splice(3,5,10)
            sleep(68000)
            setting.ttree(101)
            sleep(200)
            setting.placeWood()
            sleep(200)
            setting.breakWood()
            sleep(200)
            setting.splice(101,3,1)
            sleep(122000)
            getBot():hit(getBot().x,getBot().y)
            sleep(1000)
        end
    end
    getBot().auto_collect = false
end

if Information == "Script Rotation made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq" then
    if autologin and not indexbot then
        setting.setauth()
        setting.main()
    else
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
        end
        sleep(indexbot * delayexecute)
        while findItem(9640) > 0 do
            setting.warp(getBot().name,"",3000)
            while getTile(getBot().x,getBot().y - 1).fg ~= 9640 do
                place(9640,0,-1)
                sleep(delayplace)
            end
        end
        if pickaxe then
            while findItem(98) == 0 and getBot().status == BotStatus.online do
                setting.takepickaxe()
                sleep(6000)
            end
        end
        if autoSkipQuest then
            while not getBot():isInWorld() do
                setting.warp(getBot().name,"",5000)
            end
            print("["..indexbot.."]Skipping tutorial")
            addEvent(Event.variantlist, setting.hookworld)
            runThread(function()
                getBot():sendPacket(2, "action|wrench\n|netid|"..getLocal().netid)
                sleep(1000)
                getBot():sendPacket(2, "action|dialog_return\ndialog_name|popup\nnetID|"..getLocal().netid.."|\nbuttonClicked|my_worlds")
                sleep(1000)
            end)    
            listenEvents(5)
            setting.algorithm()
        end
        if takebackjammer then
            setting.breakjammers()
            setting.storingjammer()
            getBot():stopScript()
        end
        if pnbother then
            if pnbothermode == "sj" then
                while findItem(226) == 0 do
                    setting.takejammer()
                    sleep(3000)
                end
            elseif pnbothermode == "wl" then
                while findItem(242) == 0 do
                    setting.takejammer()
                    sleep(3000)
                end
            elseif pnbothermode == "wl_sj" then
                while findItem(242) == 0 and findItem(226) == 0 do
                    setting.takejammer()
                    sleep(3000)
                end
            end
            ::HERE::
            print("["..indexbot.."]Generating worlds")
            setting.warp(find,"",3000)
            if not subserver then
                if not nuked then
                    while getTile(getBot().x,getBot().y).fg == 6 do
                        move(1,0)
                        sleep(500)
                    end
                    setting.reconnect(find,"")
                else
                    nuked = false
                    sleep(5000)
                    print("World generate is NUKED!, Terminate script !!")
                    setting.botinfo("World generate is NUKED!, Terminate script !! @everyone")
                    getBot():stopScript()
                end
            else
                subserver = false
                sleep(5000)
                print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                sleep(120000)
                goto HERE
            end
            setting.placeall()
            setting.writeFile("jammer",'"'..find..'", ---> '..getBot().name..'')
        end
        if leveling and getBot().level < setmaxlvl then
            setting.lepel()
        end
        while true do
            for idx, value in ipairs(worlds) do
                ::Rets::
                setting.warp(value,doorfarm,delaywarp)
                setting.webhookinfo()
                if not subserver then
                    if not nuked then
                        if not wrong then
                            setting.harvest(value)
                            setting.rechecking(value)
                            if clearhistoryAfterdoneFarm then
                                setting.joinworld()
                            end
                            if restAfterDoneFarm then
                                print("["..indexbot.."]Resting after farm")
                                getBot():sendPacket(3,"action|join_request\nname|EXIT\ninvitedWorld|0")
                                sleep(delayRestAfterDoneFarm * 60000)
                            end
                        else
                            wrong = false
                            sleep(5000)
                            setting.writeFile("worldinfo","[ "..value.." ] is wrong id")
                            sleep(1000)
                            print("["..indexbot.."]"..value.." is wrong door id, skipped world")
                            setting.botinfo("[ "..value.." ] is wrong door id, skipped world @everyone")
                        end
                    else
                        nuked = false
                        sleep(5000)
                        setting.writeFile("worldinfo","[ "..value.." ] is NUKED !!")
                        sleep(1000)
                        print("["..indexbot.."]"..value.." is NUKED!, check ur world !!")
                        setting.botinfo("[ "..value.." ] is NUKED!, check ur world !! @everyone")
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("["..indexbot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    setting.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto Rets
                end
            end
            if not looping then
                if findItem(block) > 0 then
                    setting.storingblocks(threads,block)
                end
                if findItem(seed) > 0 then
                    setting.storingseeds(threads,seed)
                end
                if pnbother then
                    setting.warp(find,"",delaywarp)
                    while getTile(getBot().x,getBot().y).fg == 6 do
                        move(1,0)
                        sleep(500)
                    end
                    while getTile(getBot().x,getBot().y - 1).fg == 226 do
                        punch(0,-1)
                        sleep(delaypunch)
                        setting.reconnect(find,"",getBot().x,getBot().y)
                    end
                    setting.storingjammer()
                end
                setting.warp(find,"",delaywarp)
                print("["..indexbot.."]Already finished all world")
                setting.botinfo("[ "..getBot().name.." ] Already finished all world, Terminated script! @everyone")
                if removingbot then
                    removeBot()
                    sleep(1500)
                end 
                print("["..indexbot.."]Finished all world")
                break
            else
                sleep(10000)
            end
        end
    end
else
    print("["..indexbot.."]Script Rotation made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
    setting.botinfo("Script Rotation made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
end
